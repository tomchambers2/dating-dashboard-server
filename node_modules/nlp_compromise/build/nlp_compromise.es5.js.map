{"version":3,"sources":["./builds/nlp_compromise.es6.js"],"names":[],"mappings":"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AAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,SAAS,CACT,IAAI,CACJ,KAAK,CACN,CACD,CACE,WAAW,CACX,MAAM,CACN,GAAG,CACH,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,MAAM,CACN,QAAQ,CACR,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,QAAQ,CACR,KAAK,CACL,KAAK,CACN,CACD,CACE,QAAQ,CACR,UAAU,CACV,OAAO,CACP,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,QAAQ,CACR,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,MAAM,CACN,GAAG,CACH,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,OAAO,CACP,GAAG,CACH,IAAI,CACJ,MAAM,CACP,CACD,CACE,MAAM,CACN,MAAM,CACN,IAAI,CACJ,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,OAAO,CACP,KAAK,CACL,IAAI,CACJ,MAAM,CACP,CACD,CACE,IAAI,CACJ,MAAM,CACN,KAAK,CACL,KAAK,CACL,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,SAAS,CACT,OAAO,CACP,IAAI,CACJ,IAAI,CACL,CACD,CACE,KAAK,CACL,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,QAAQ,CACR,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,MAAM,CACN,MAAM,CACN,IAAI,CACJ,OAAO,CACR,CACD,CACE,QAAQ,CACR,MAAM,CACN,SAAS,CACT,IAAI,CAEL,CACD,CACE,QAAQ,CACR,MAAM,CACN,QAAQ,CACR,IAAI,CACJ,KAAK,CACN,CACD,CACE,SAAS,CACT,WAAW,CACX,SAAS,CACT,IAAI,CACJ,IAAI,CACL,CACD,CACE,QAAQ,CACR,UAAU,CACV,OAAO,CACP,IAAI,CACJ,IAAI,CACL,CACD,CACE,KAAK,CACL,OAAO,CACP,KAAK,CACL,IAAI,CACJ,MAAM,CACP,CACD,CACE,MAAM,CACN,QAAQ,CACR,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,IAAI,CACJ,MAAM,CACN,MAAM,CACN,KAAK,CACL,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,QAAQ,CACR,KAAK,CACL,KAAK,CAEN,CACD,CACE,MAAM,CACN,MAAM,CACN,IAAI,CACJ,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,QAAQ,CACR,KAAK,CACL,IAAI,CACJ,IAAI,CACL,CACD,CACE,KAAK,CACL,OAAO,CACP,GAAG,CACH,IAAI,CACJ,MAAM,CACP,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,GAAG,CACH,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,SAAS,CACT,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,OAAO,CACP,GAAG,CACH,IAAI,CACJ,MAAM,CACP,CACD,CACE,KAAK,CACL,OAAO,CACP,KAAK,CACL,IAAI,CACJ,IAAI,CACL,CACD,CACE,OAAO,CACP,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,QAAQ,CACR,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,QAAQ,CACR,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,MAAM,CACN,IAAI,CACJ,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,OAAO,CACP,GAAG,CACH,IAAI,CACJ,MAAM,CACP,CACD,CACE,MAAM,CACN,OAAO,CACP,GAAG,CACH,IAAI,CACJ,MAAM,CACP,CACD,CACE,MAAM,CACN,MAAM,CACN,GAAG,CACH,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,QAAQ,CACR,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,QAAQ,CACR,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,KAAK,CACL,OAAO,CACP,KAAK,CACL,IAAI,CACJ,MAAM,CACP,CACD,CACE,KAAK,CACL,MAAM,CACN,MAAM,CACN,IAAI,CAEL,CACD,CACE,KAAK,CACL,MAAM,CACN,KAAK,CACL,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,OAAO,CACP,GAAG,CACH,IAAI,CACJ,MAAM,CACP,CACD,CACE,OAAO,CACP,SAAS,CACT,OAAO,CACP,IAAI,CACJ,IAAI,CACL,CACD,CACE,OAAO,CACP,SAAS,CACT,OAAO,CACP,IAAI,CACJ,IAAI,CACL,CACD,CACE,OAAO,CACP,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,OAAO,CACP,GAAG,CACH,IAAI,CACJ,MAAM,CACP,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,OAAO,CACP,KAAK,CACL,IAAI,CACJ,MAAM,CACP,CACD,CACE,OAAO,CACP,SAAS,CACT,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,OAAO,CACP,MAAM,CACN,IAAI,CACJ,MAAM,CACP,CACD,CACE,QAAQ,CACR,MAAM,CACN,GAAG,CACH,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,QAAQ,CACR,UAAU,CACV,QAAQ,CACR,IAAI,CACJ,IAAI,CACL,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,MAAM,CACP,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,QAAQ,CACR,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,OAAO,CACP,MAAM,CACN,QAAQ,CACR,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,SAAS,CACT,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,YAAY,CACZ,MAAM,CACN,YAAY,CACZ,IAAI,CAEL,CACD,CACE,MAAM,CACN,QAAQ,CACR,MAAM,CACN,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,OAAO,CACP,KAAK,CACL,IAAI,CACJ,MAAM,CACP,CACD,CACE,UAAU,CACV,MAAM,CACN,UAAU,CACV,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,SAAS,CACT,OAAO,CACP,IAAI,CACJ,IAAI,CACL,CACD,CACE,KAAK,CACL,OAAO,CACP,IAAI,CACJ,IAAI,CACJ,IAAI,CACL,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,MAAM,CACN,MAAM,CACN,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,GAAG,CACH,KAAK,CACN,CACD,CACE,KAAK,CACL,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,SAAS,CACT,WAAW,CACX,IAAI,CACJ,IAAI,CACJ,YAAY,CACb,CACD,CACE,OAAO,CACP,KAAK,CACL,MAAM,CACN,KAAK,CAEN,CACD,CACE,OAAO,CACP,MAAM,CACN,SAAS,CACT,SAAS,CACT,SAAS,CACV,CACD,CACE,KAAK,CACL,OAAO,CACP,IAAI,CACJ,IAAI,CACJ,IAAI,CACL,CACD,CACE,SAAS,CACT,MAAM,CACN,GAAG,CACH,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,OAAO,CACP,MAAM,CACN,OAAO,CACP,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,OAAO,CACP,MAAM,CACN,IAAI,CACJ,MAAM,CACP,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,KAAK,CACL,OAAO,CACP,MAAM,CACN,IAAI,CACJ,MAAM,CACP,CACD,CACE,KAAK,CACL,OAAO,CACP,MAAM,CACN,IAAI,CACJ,MAAM,CACP,CACD,CACE,OAAO,CACP,MAAM,CACN,KAAK,CACL,KAAK,CACL,KAAK,CACN,CACD,CACE,KAAK,CACL,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,MAAM,CACN,KAAK,CACL,IAAI,CACJ,KAAK,CACN,CACD,CACE,MAAM,CACN,M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","file":"./builds/nlp_compromise.es6.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n//these are common word shortenings used in the lexicon and sentence segmentation methods\n//there are all nouns, or at the least, belong beside one.\n\"use strict\";\nlet honourifics = require(\"./honourifics\"); //stored seperately, for 'noun.is_person()'\n\nlet main = [\n  //common abbreviations\n  \"arc\", \"al\", \"ave\", \"blvd\", \"cl\", \"ct\", \"cres\", \"exp\", \"rd\", \"st\", \"dist\", \"mt\", \"fy\", \"hwy\", \"pd\", \"pl\", \"plz\", \"tce\", \"llb\", \"md\", \"bl\", \"ma\", \"ba\", \"lit\",\n  //place main\n  \"ala\", \"ariz\", \"ark\", \"cal\", \"calif\", \"col\", \"colo\", \"conn\", \"del\", \"fed\", \"fla\", \"fl\", \"ga\", \"ida\", \"ind\", \"ia\", \"la\", \"kan\", \"kans\", \"ken\", \"ky\", \"la\", \"md\", \"mich\", \"minn\", \"mont\", \"neb\", \"nebr\", \"nev\", \"okla\", \"penna\", \"penn\", \"pa\", \"dak\", \"tenn\", \"tex\", \"ut\", \"vt\", \"va\", \"wash\", \"wis\", \"wisc\", \"wy\", \"wyo\", \"usafa\", \"alta\", \"ont\", \"que\", \"sask\", \"yuk\",\n  //org main\n  \"dept\", \"univ\", \"assn\", \"bros\", \"inc\", \"ltd\", \"co\", \"corp\",\n  //proper nouns with exclamation marks\n  \"yahoo\", \"joomla\", \"jeopardy\"\n];\n//person titles like 'jr', (stored seperately)\nmain = main.concat(honourifics);\n\nmodule.exports = main;\n\n},{\"./honourifics\":6}],2:[function(require,module,exports){\n//adjectives that either aren't covered by rules, or have superlative/comparative forms\n//this list is the seed, from which various forms are conjugated\nmodule.exports = [\n  \"colonial\",\n  \"moody\",\n  \"literal\",\n  \"actual\",\n  \"probable\",\n  \"apparent\",\n  \"usual\",\n  \"aberrant\",\n  \"ablaze\",\n  \"able\",\n  \"absolute\",\n  \"aboard\",\n  \"abrupt\",\n  \"absent\",\n  \"absorbing\",\n  \"abundant\",\n  \"accurate\",\n  \"adult\",\n  \"afraid\",\n  \"agonizing\",\n  \"ahead\",\n  \"aloof\",\n  \"amazing\",\n  \"arbitrary\",\n  \"arrogant\",\n  \"asleep\",\n  \"astonishing\",\n  \"average\",\n  \"awake\",\n  \"aware\",\n  \"awkward\",\n  \"back\",\n  \"bad\",\n  \"bankrupt\",\n  \"bawdy\",\n  \"beneficial\",\n  \"bent\",\n  \"best\",\n  \"better\",\n  \"bizarre\",\n  \"bloody\",\n  \"bouncy\",\n  \"brilliant\",\n  \"broken\",\n  \"burly\",\n  \"busy\",\n  \"cagey\",\n  \"careful\",\n  \"caring\",\n  \"certain\",\n  \"chief\",\n  \"chilly\",\n  \"civil\",\n  \"clever\",\n  \"closed\",\n  \"cloudy\",\n  \"colossal\",\n  \"commercial\",\n  \"common\",\n  \"complete\",\n  \"complex\",\n  \"concerned\",\n  \"concrete\",\n  \"congruent\",\n  \"constant\",\n  \"cooing\",\n  \"correct\",\n  \"cowardly\",\n  \"craven\",\n  \"cuddly\",\n  \"daily\",\n  \"damaged\",\n  \"damaging\",\n  \"dapper\",\n  \"dashing\",\n  \"deadpan\",\n  \"deeply\",\n  \"defiant\",\n  \"degenerate\",\n  \"delicate\",\n  \"delightful\",\n  \"desperate\",\n  \"determined\",\n  \"didactic\",\n  \"difficult\",\n  \"discreet\",\n  \"done\",\n  \"double\",\n  \"doubtful\",\n  \"downtown\",\n  \"dreary\",\n  \"east\",\n  \"eastern\",\n  \"elderly\",\n  \"elegant\",\n  \"elfin\",\n  \"elite\",\n  \"eminent\",\n  \"encouraging\",\n  \"entire\",\n  \"erect\",\n  \"ethereal\",\n  \"exact\",\n  \"expert\",\n  \"extra\",\n  \"exuberant\",\n  \"exultant\",\n  \"false\",\n  \"fancy\",\n  \"faulty\",\n  \"female\",\n  \"fertile\",\n  \"fierce \",\n  \"financial\",\n  \"first\",\n  \"fit\",\n  \"fixed\",\n  \"flagrant\",\n  \"foamy\",\n  \"foolish\",\n  \"foregoing\",\n  \"foreign\",\n  \"former\",\n  \"fortunate\",\n  \"frantic\",\n  \"freezing\",\n  \"frequent\",\n  \"fretful\",\n  \"friendly\",\n  \"fun\",\n  \"furry\",\n  \"future\",\n  \"gainful\",\n  \"gaudy\",\n  \"giant\",\n  \"giddy\",\n  \"gigantic\",\n  \"gleaming\",\n  \"global\",\n  \"gold\",\n  \"gone\",\n  \"good\",\n  \"goofy\",\n  \"graceful\",\n  \"grateful\",\n  \"gratis\",\n  \"gray\",\n  \"grey\",\n  \"groovy\",\n  \"gross\",\n  \"guarded\",\n  \"half\",\n  \"handy\",\n  \"hanging\",\n  \"hateful\",\n  \"heady\",\n  \"heavenly\",\n  \"hellish\",\n  \"helpful\",\n  \"hesitant\",\n  \"highfalutin\",\n  \"homely\",\n  \"honest\",\n  \"huge\",\n  \"humdrum\",\n  \"hurried\",\n  \"hurt\",\n  \"icy\",\n  \"ignorant\",\n  \"ill\",\n  \"illegal\",\n  \"immediate\",\n  \"immense\",\n  \"imminent\",\n  \"impartial\",\n  \"imperfect\",\n  \"imported\",\n  \"initial\",\n  \"innate\",\n  \"inner\",\n  \"inside\",\n  \"irate\",\n  \"jolly\",\n  \"juicy\",\n  \"junior\",\n  \"juvenile\",\n  \"kaput\",\n  \"kindly\",\n  \"knowing\",\n  \"labored\",\n  \"languid\",\n  \"latter\",\n  \"learned\",\n  \"left\",\n  \"legal\",\n  \"lethal\",\n  \"level\",\n  \"lewd\",\n  \"likely\",\n  \"literate\",\n  \"lively\",\n  \"living\",\n  \"lonely\",\n  \"longing\",\n  \"loutish\",\n  \"lovely\",\n  \"loving\",\n  \"lowly\",\n  \"luxuriant\",\n  \"lying\",\n  \"macabre\",\n  \"madly\",\n  \"magenta\",\n  \"main\",\n  \"major\",\n  \"makeshift\",\n  \"male\",\n  \"mammoth\",\n  \"measly\",\n  \"meaty\",\n  \"medium\",\n  \"mere\",\n  \"middle\",\n  \"miniature\",\n  \"minor\",\n  \"miscreant\",\n  \"mobile\",\n  \"moldy\",\n  \"mute\",\n  \"naive\",\n  \"nearby\",\n  \"necessary\",\n  \"neighborly\",\n  \"next\",\n  \"nimble\",\n  \"nonchalant\",\n  \"nondescript\",\n  \"nonstop\",\n  \"north\",\n  \"nosy\",\n  \"obeisant\",\n  \"obese\",\n  \"obscene\",\n  \"observant\",\n  \"obsolete\",\n  \"offbeat\",\n  \"official\",\n  \"ok\",\n  \"open\",\n  \"opposite\",\n  \"organic\",\n  \"outdoor\",\n  \"outer\",\n  \"outgoing\",\n  \"oval\",\n  \"over\",\n  \"overall\",\n  \"overt\",\n  \"overweight\",\n  \"overwrought\",\n  \"painful\",\n  \"past\",\n  \"peaceful\",\n  \"perfect\",\n  \"petite\",\n  \"picayune\",\n  \"placid\",\n  \"plant\",\n  \"pleasant\",\n  \"polite\",\n  \"potential\",\n  \"pregnant\",\n  \"premium\",\n  \"present\",\n  \"pricey\",\n  \"prickly\",\n  \"primary\",\n  \"prior\",\n  \"private\",\n  \"profuse\",\n  \"proper\",\n  \"public\",\n  \"pumped\",\n  \"puny\",\n  \"quack\",\n  \"quaint\",\n  \"quickest\",\n  \"rabid\",\n  \"racial\",\n  \"ready\",\n  \"real\",\n  \"rebel\",\n  \"recondite\",\n  \"redundant\",\n  \"relevant\",\n  \"remote\",\n  \"resolute\",\n  \"resonant\",\n  \"right\",\n  \"rightful\",\n  \"ritzy\",\n  \"robust\",\n  \"romantic\",\n  \"roomy\",\n  \"rough\",\n  \"royal\",\n  \"salty\",\n  \"same\",\n  \"scary\",\n  \"scientific\",\n  \"screeching\",\n  \"second\",\n  \"secret\",\n  \"secure\",\n  \"sedate\",\n  \"seemly\",\n  \"selfish\",\n  \"senior\",\n  \"separate\",\n  \"severe\",\n  \"shiny\",\n  \"shocking\",\n  \"shut\",\n  \"shy\",\n  \"sick\",\n  \"significant\",\n  \"silly\",\n  \"sincere\",\n  \"single\",\n  \"skinny\",\n  \"slight\",\n  \"slimy\",\n  \"smelly\",\n  \"snobbish\",\n  \"social\",\n  \"somber\",\n  \"sordid\",\n  \"sorry\",\n  \"southern\",\n  \"spare\",\n  \"special\",\n  \"specific\",\n  \"spicy\",\n  \"splendid\",\n  \"squeamish\",\n  \"standard\",\n  \"standing\",\n  \"steadfast\",\n  \"steady\",\n  \"stereotyped\",\n  \"still\",\n  \"striped\",\n  \"stupid\",\n  \"sturdy\",\n  \"subdued\",\n  \"subsequent\",\n  \"substantial\",\n  \"sudden\",\n  \"super\",\n  \"superb\",\n  \"superficial\",\n  \"supreme\",\n  \"sure\",\n  \"taboo\",\n  \"tan\",\n  \"tasteful\",\n  \"tawdry\",\n  \"telling\",\n  \"temporary\",\n  \"terrific\",\n  \"tested\",\n  \"thoughtful\",\n  \"tidy\",\n  \"tiny\",\n  \"top\",\n  \"torpid\",\n  \"tranquil\",\n  \"trite\",\n  \"ugly\",\n  \"ultra\",\n  \"unbecoming\",\n  \"understood\",\n  \"uneven\",\n  \"unfair\",\n  \"unlikely\",\n  \"unruly\",\n  \"unsightly\",\n  \"untidy\",\n  \"unwritten\",\n  \"upbeat\",\n  \"upper\",\n  \"uppity\",\n  \"upset\",\n  \"upstairs\",\n  \"uptight\",\n  \"used\",\n  \"useful\",\n  \"utter\",\n  \"uttermost\",\n  \"vagabond\",\n  \"vanilla\",\n  \"various\",\n  \"vengeful\",\n  \"verdant\",\n  \"violet\",\n  \"volatile\",\n  \"wanting\",\n  \"wary\",\n  \"wasteful\",\n  \"weary\",\n  \"weekly\",\n  \"welcome\",\n  \"western\",\n  \"whole\",\n  \"wholesale\",\n  \"wiry\",\n  \"wistful\",\n  \"womanly\",\n  \"wooden\",\n  \"woozy\",\n  \"wound\",\n  \"wrong\",\n  \"wry\",\n  \"zany\",\n  \"sacred\",\n  \"unknown\",\n  \"detailed\",\n  \"ongoing\",\n  \"prominent\",\n  \"permanent\",\n  \"diverse\",\n  \"partial\",\n  \"moderate\",\n  \"contemporary\",\n  \"intense\",\n  \"widespread\",\n  \"ultimate\",\n  \"ideal\",\n  \"adequate\",\n  \"sophisticated\",\n  \"naked\",\n  \"dominant\",\n  \"precise\",\n  \"intact\",\n  \"adverse\",\n  \"genuine\",\n  \"subtle\",\n  \"universal\",\n  \"resistant\",\n  \"routine\",\n  \"distant\",\n  \"unexpected\",\n  \"soviet\",\n  \"blind\",\n  \"artificial\",\n  \"mild\",\n  \"legitimate\",\n  \"unpublished\",\n  \"superior\",\n  \"intermediate\",\n  \"everyday\",\n  \"dumb\",\n  \"excess\",\n  \"sexy\",\n  \"fake\",\n  \"monthly\",\n  \"premature\",\n  \"sheer\",\n  \"generic\",\n  \"insane\",\n  \"contrary\",\n  \"twin\",\n  \"upcoming\",\n  \"bottom\",\n  \"costly\",\n  \"indirect\",\n  \"sole\",\n  \"unrelated\",\n  \"hispanic\",\n  \"improper\",\n  \"underground\",\n  \"legendary\",\n  \"reluctant\",\n  \"beloved\",\n  \"inappropriate\",\n  \"corrupt\",\n  \"irrelevant\",\n  \"justified\",\n  \"obscure\",\n  \"profound\",\n  \"hostile\",\n  \"influential\",\n  \"inadequate\",\n  \"abstract\",\n  \"timely\",\n  \"authentic\",\n  \"bold\",\n  \"intimate\",\n  \"straightforward\",\n  \"rival\",\n  \"right-wing\",\n  \"racist\",\n  \"symbolic\",\n  \"unprecedented\",\n  \"loyal\",\n  \"talented\",\n  \"troubled\",\n  \"noble\",\n  \"instant\",\n  \"incorrect\",\n  \"dense\",\n  \"blond\",\n  \"deliberate\",\n  \"blank\",\n  \"rear\",\n  \"feminine\",\n  \"apt\",\n  \"stark\",\n  \"alcoholic\",\n  \"teenage\",\n  \"vibrant\",\n  \"humble\",\n  \"vain\",\n  \"covert\",\n  \"bland\",\n  \"trendy\",\n  \"foul\",\n  \"populist\",\n  \"alarming\",\n  \"hooked\",\n  \"wicked\",\n  \"deaf\",\n  \"left-wing\",\n  \"lousy\",\n  \"malignant\",\n  \"stylish\",\n  \"upscale\",\n  \"hourly\",\n  \"refreshing\",\n  \"cozy\",\n  \"slick\",\n  \"dire\",\n  \"yearly\",\n  \"inbred\",\n  \"part-time\",\n  \"finite\",\n  \"backwards\",\n  \"nightly\",\n  \"unauthorized\",\n  \"cheesy\",\n  \"indoor\",\n  \"surreal\",\n  \"bald\",\n  \"masculine\",\n  \"shady\",\n  \"spirited\",\n  \"eerie\",\n  \"horrific\",\n  \"smug\",\n  \"stern\",\n  \"hefty\",\n  \"savvy\",\n  \"bogus\",\n  \"elaborate\",\n  \"gloomy\",\n  \"pristine\",\n  \"extravagant\",\n  \"serene\",\n  \"advanced\",\n  \"perverse\",\n  \"devout\",\n  \"crisp\",\n  \"rosy\",\n  \"slender\",\n  \"melancholy\",\n  \"faux\",\n  \"phony\",\n  \"danish\",\n  \"lofty\",\n  \"nuanced\",\n  \"lax\",\n  \"adept\",\n  \"barren\",\n  \"shameful\",\n  \"sleek\",\n  \"solemn\",\n  \"vacant\",\n  \"dishonest\",\n  \"brisk\",\n  \"fluent\",\n  \"insecure\",\n  \"humid\",\n  \"menacing\",\n  \"moot\",\n  \"soothing\",\n  \"self-loathing\",\n  \"far-reaching\",\n  \"harrowing\",\n  \"scathing\",\n  \"perplexing\",\n  \"calming\",\n  \"unconvincing\",\n  \"unsuspecting\",\n  \"unassuming\",\n  \"surprising\",\n  \"unappealing\",\n  \"vexing\",\n  \"unending\",\n  \"easygoing\",\n  \"appetizing\",\n  \"disgruntled\",\n  \"retarded\",\n  \"undecided\",\n  \"unregulated\",\n  \"unsupervised\",\n  \"unrecognized\",\n  \"crazed\",\n  \"distressed\",\n  \"jagged\",\n  \"paralleled\",\n  \"cramped\",\n  \"warped\",\n  \"antiquated\",\n  \"fabled\",\n  \"deranged\",\n  \"diseased\",\n  \"ragged\",\n  \"intoxicated\",\n  \"hallowed\",\n  \"crowded\",\n  \"ghastly\",\n  \"disorderly\",\n  \"saintly\",\n  \"wily\",\n  \"sly\",\n  \"sprightly\",\n  \"ghostly\",\n  \"oily\",\n  \"hilly\",\n  \"grisly\",\n  \"earthly\",\n  \"friendly\",\n  \"unwieldy\",\n  \"many\",\n  \"most\",\n  \"last\",\n  \"expected\",\n  \"far\",\n  \"due\",\n  \"divine\",\n  \"all\",\n  \"together\",\n  \"only\",\n  \"outside\",\n  \"multiple\",\n  \"appropriate\",\n  \"evil\",\n  \"favorite\",\n  \"limited\",\n  \"random\",\n  \"republican\",\n  \"okay\",\n  \"essential\",\n  \"secondary\",\n  \"gay\",\n  \"south\",\n  \"pro\",\n  \"northern\",\n  \"urban\",\n  \"acute\",\n  \"prime\",\n  \"arab\",\n  \"overnight\",\n  \"mixed\",\n  \"crucial\",\n  \"behind\",\n  \"above\",\n  \"beyond\",\n  \"against\",\n  \"under\",\n  \"other\",\n  \"less\"\n];\n\n},{}],3:[function(require,module,exports){\n//terms that are \"CD\", a 'value' term\nmodule.exports = [\n  //months\n  \"january\",\n  \"february\",\n  // \"march\",\n  \"april\",\n  // \"may\",\n  \"june\",\n  \"july\",\n  \"august\",\n  \"september\",\n  \"october\",\n  \"november\",\n  \"december\",\n  \"jan\",\n  \"feb\",\n  \"mar\",\n  \"apr\",\n  \"jun\",\n  \"jul\",\n  \"aug\",\n  \"sep\",\n  \"oct\",\n  \"nov\",\n  \"dec\",\n  \"sept\",\n  \"sep\",\n  //days\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\",\n  \"sunday\"\n];\n\n},{}],4:[function(require,module,exports){\n//adjectival forms of place names, as adjectives.\nmodule.exports = [\n  \"afghan\",\n  \"albanian\",\n  \"algerian\",\n  \"argentine\",\n  \"armenian\",\n  \"australian\",\n  \"aussie\",\n  \"austrian\",\n  \"bangladeshi\",\n  \"belgian\",\n  \"bolivian\",\n  \"bosnian\",\n  \"brazilian\",\n  \"bulgarian\",\n  \"cambodian\",\n  \"canadian\",\n  \"chilean\",\n  \"chinese\",\n  \"colombian\",\n  \"croat\",\n  \"cuban\",\n  \"czech\",\n  \"dominican\",\n  \"egyptian\",\n  \"british\",\n  \"estonian\",\n  \"ethiopian\",\n  \"finnish\",\n  \"french\",\n  \"gambian\",\n  \"georgian\",\n  \"german\",\n  \"greek\",\n  \"haitian\",\n  \"hungarian\",\n  \"indian\",\n  \"indonesian\",\n  \"iranian\",\n  \"iraqi\",\n  \"irish\",\n  \"israeli\",\n  \"italian\",\n  \"jamaican\",\n  \"japanese\",\n  \"jordanian\",\n  \"kenyan\",\n  \"korean\",\n  \"kuwaiti\",\n  \"latvian\",\n  \"lebanese\",\n  \"liberian\",\n  \"libyan\",\n  \"lithuanian\",\n  \"macedonian\",\n  \"malaysian\",\n  \"mexican\",\n  \"mongolian\",\n  \"moroccan\",\n  \"dutch\",\n  \"nicaraguan\",\n  \"nigerian\",\n  \"norwegian\",\n  \"omani\",\n  \"pakistani\",\n  \"palestinian\",\n  \"filipino\",\n  \"polish\",\n  \"portuguese\",\n  \"qatari\",\n  \"romanian\",\n  \"russian\",\n  \"rwandan\",\n  \"samoan\",\n  \"saudi\",\n  \"scottish\",\n  \"senegalese\",\n  \"serbian\",\n  \"singaporean\",\n  \"slovak\",\n  \"somali\",\n  \"sudanese\",\n  \"swedish\",\n  \"swiss\",\n  \"syrian\",\n  \"taiwanese\",\n  \"thai\",\n  \"tunisian\",\n  \"ugandan\",\n  \"ukrainian\",\n  \"american\",\n  \"hindi\",\n  \"spanish\",\n  \"venezuelan\",\n  \"vietnamese\",\n  \"welsh\",\n  \"african\",\n  \"european\",\n  \"asian\",\n  \"californian\",\n];\n\n},{}],5:[function(require,module,exports){\n// common first-names in compressed form.\n//from http://www.ssa.gov/oact/babynames/limits.html  and http://www.servicealberta.gov.ab.ca/pdf/vs/2001_Boys.pdf\n//not sure what regional/cultural/demographic bias this has. Probably a lot.\n// 73% of people are represented in the top 1000 names\n//used to reduce redundant named-entities in longer text. (don't spot the same person twice.)\n//used to identify gender for coreference resolution\n\"use strict\";\nlet main = [];\n\n//an ad-hoc prefix encoding for names. 2ms decompression of names\nlet male_names = {\n  \"will\": \"iam,ie,ard,is,iams\",\n  \"fred\": \",erick,die,rick,dy\",\n  \"marc\": \"us,,o,os,el\",\n  \"darr\": \"ell,yl,en,el,in\",\n  \"fran\": \"k,cis,cisco,klin,kie\",\n  \"terr\": \"y,ance,ence,ell\",\n  \"rand\": \"y,all,olph,al\",\n  \"brad\": \"ley,,ford,y\",\n  \"jeff\": \"rey,,ery,ry\",\n  \"john\": \",ny,nie,athan\",\n  \"greg\": \"ory,,g,orio\",\n  \"mar\": \"k,tin,vin,io,shall,ty,lon,lin\",\n  \"car\": \"l,los,lton,roll,y,ey\",\n  \"ken\": \"neth,,t,ny,dall,drick\",\n  \"har\": \"old,ry,vey,ley,lan,rison\",\n  \"ste\": \"ven,phen,ve,wart,phan,rling\",\n  \"jer\": \"ry,emy,ome,emiah,maine,ald\",\n  \"mic\": \"hael,heal,ah,key,hel\",\n  \"dar\": \"yl,in,nell,win,ius\",\n  \"dan\": \"iel,ny,,e\",\n  \"wil\": \"bur,son,bert,fred,fredo\",\n  \"ric\": \"hard,ky,ardo,k,key\",\n  \"cli\": \"fford,nton,fton,nt,ff\",\n  \"cla\": \"rence,ude,yton,rk,y\",\n  \"ben\": \"jamin,,nie,ny,ito\",\n  \"rod\": \"ney,erick,olfo,ger,\",\n  \"rob\": \"ert,erto,bie,\",\n  \"gar\": \"y,ry,rett,land\",\n  \"sam\": \"uel,,my,mie\",\n  \"and\": \"rew,re,y,res\",\n  \"jos\": \"eph,e,hua,h\",\n  \"joe\": \",l,y,sph\",\n  \"leo\": \"nard,n,,nardo\",\n  \"tom\": \",my,as,mie\",\n  \"bry\": \"an,ant,ce,on\",\n  \"ant\": \"hony,onio,oine,on\",\n  \"jac\": \"k,ob,kson\",\n  \"cha\": \"rles,d,rlie,se\",\n  \"sha\": \"wn,ne,un\",\n  \"bre\": \"nt,tt,ndan,t\",\n  \"jes\": \"se,us,s\",\n  \"al\": \"bert,an,len,fred,exander,ex,vin,lan,fredo,berto,ejandro,fonso,ton,,onzo,i,varo\",\n  \"ro\": \"nald,ger,y,nnie,land,n,ss,osevelt,gelio,lando,man,cky,yce,scoe,ry\",\n  \"de\": \"nnis,rek,an,rrick,lbert,vin,wey,xter,wayne,metrius,nis,smond\",\n  \"ja\": \"mes,son,y,red,vier,ke,sper,mal,rrod\",\n  \"el\": \"mer,lis,bert,ias,ijah,don,i,ton,liot,liott,vin,wood\",\n  \"ma\": \"tthew,nuel,urice,thew,x,tt,lcolm,ck,son\",\n  \"do\": \"nald,uglas,n,nnie,ug,minic,yle,mingo,minick\",\n  \"er\": \"ic,nest,ik,nesto,ick,vin,nie,win\",\n  \"ra\": \"ymond,lph,y,mon,fael,ul,miro,phael\",\n  \"ed\": \"ward,win,die,gar,uardo,,mund,mond\",\n  \"co\": \"rey,ry,dy,lin,nrad,rnelius\",\n  \"le\": \"roy,wis,ster,land,vi\",\n  \"lo\": \"uis,nnie,renzo,ren,well,uie,u,gan\",\n  \"da\": \"vid,le,ve,mon,llas,mian,mien\",\n  \"jo\": \"nathan,n,rge,rdan,nathon,aquin\",\n  \"ru\": \"ssell,ben,dolph,dy,fus,ssel,sty\",\n  \"ke\": \"vin,ith,lvin,rmit\",\n  \"ar\": \"thur,nold,mando,turo,chie,mand\",\n  \"re\": \"ginald,x,ynaldo,uben,ggie\",\n  \"ge\": \"orge,rald,ne,rard,offrey,rardo\",\n  \"la\": \"rry,wrence,nce,urence,mar,mont\",\n  \"mo\": \"rris,ses,nte,ises,nty\",\n  \"ju\": \"an,stin,lio,lian,lius,nior\",\n  \"pe\": \"ter,dro,rry,te,rcy\",\n  \"tr\": \"avis,oy,evor,ent\",\n  \"he\": \"nry,rbert,rman,ctor,ath\",\n  \"no\": \"rman,el,ah,lan,rbert\",\n  \"em\": \"anuel,il,ilio,mett,manuel\",\n  \"wa\": \"lter,yne,rren,llace,de\",\n  \"mi\": \"ke,guel,lton,tchell,les\",\n  \"sa\": \"lvador,lvatore,ntiago,ul,ntos\",\n  \"ch\": \"ristopher,ris,ester,ristian,uck\",\n  \"pa\": \"ul,trick,blo,t\",\n  \"st\": \"anley,uart,an\",\n  \"hu\": \"gh,bert,go,mberto\",\n  \"br\": \"ian,uce,andon,ain\",\n  \"vi\": \"ctor,ncent,rgil,cente\",\n  \"ca\": \"lvin,meron,leb\",\n  \"gu\": \"y,illermo,stavo\",\n  \"lu\": \"is,ther,ke,cas\",\n  \"gr\": \"ant,ady,over,aham\",\n  \"ne\": \"il,lson,al,d\",\n  \"t\": \"homas,imothy,odd,ony,heodore,im,yler,ed,yrone,aylor,erence,immy,oby,eddy,yson\",\n  \"s\": \"cott,ean,idney,ergio,eth,pencer,herman,ylvester,imon,heldon,cotty,olomon\",\n  \"r\": \"yan\",\n  \"n\": \"icholas,athan,athaniel,ick,icolas\",\n  \"a\": \"dam,aron,drian,ustin,ngelo,braham,mos,bel,gustin,ugust,dolfo\",\n  \"b\": \"illy,obby,arry,ernard,ill,ob,yron,lake,ert,oyd,illie,laine,art,uddy,urton\",\n  \"e\": \"ugene,arl,verett,nrique,van,arnest,frain,than,steban\",\n  \"h\": \"oward,omer,orace,ans,al\",\n  \"p\": \"hillip,hilip,reston,hil,ierre\",\n  \"c\": \"raig,urtis,lyde,ecil,esar,edric,leveland,urt\",\n  \"j\": \"immy,im,immie\",\n  \"g\": \"lenn,ordon,len,ilbert,abriel,ilberto\",\n  \"m\": \"elvin,yron,erle,urray\",\n  \"k\": \"yle,arl,urt,irk,ristopher\",\n  \"o\": \"scar,tis,liver,rlando,mar,wen,rville,tto\",\n  \"l\": \"loyd,yle,ionel\",\n  \"f\": \"loyd,ernando,elix,elipe,orrest,abian,idel\",\n  \"w\": \"esley,endell,m,oodrow,inston\",\n  \"d\": \"ustin,uane,wayne,wight,rew,ylan\",\n  \"z\": \"achary\",\n  \"v\": \"ernon,an,ance\",\n  \"i\": \"an,van,saac,ra,rving,smael,gnacio,rvin\",\n  \"q\": \"uentin,uinton\",\n  \"x\": \"avier\"\n};\nlet female_names = {\n  \"mari\": \"a,e,lyn,an,anne,na,ssa,bel,sa,sol,tza\",\n  \"kris\": \"ten,tin,tina,ti,tine,ty,ta,tie\",\n  \"jean\": \"ette,ne,nette,nie,ine,nine\",\n  \"chri\": \"stine,stina,sty,stie,sta,sti\",\n  \"marg\": \"aret,ie,arita,uerite,ret,o\",\n  \"ange\": \"la,lica,lina,lia,line\",\n  \"fran\": \"ces,cine,cisca\",\n  \"kath\": \"leen,erine,y,ryn,arine\",\n  \"sher\": \"ry,ri,yl,i,rie\",\n  \"caro\": \"l,lyn,line,le,lina\",\n  \"dian\": \"e,a,ne,na\",\n  \"jenn\": \"ifer,ie,y,a\",\n  \"luci\": \"lle,a,nda,le\",\n  \"kell\": \"y,i,ey,ie\",\n  \"rosa\": \",lie,lind\",\n  \"jani\": \"ce,e,s,ne\",\n  \"stac\": \"y,ey,ie,i\",\n  \"shel\": \"ly,ley,ia\",\n  \"laur\": \"a,en,ie,el\",\n  \"trac\": \"y,ey,i,ie\",\n  \"jane\": \"t,,lle,tte\",\n  \"bett\": \"y,ie,e,ye\",\n  \"rose\": \"mary,marie,tta\",\n  \"joan\": \",ne,n,na\",\n  \"mar\": \"y,tha,jorie,cia,lene,sha,yann,cella,ta,la,cy,tina\",\n  \"lor\": \"i,raine,etta,a,ena,ene,na,ie\",\n  \"sha\": \"ron,nnon,ri,wna,nna,na,una\",\n  \"dor\": \"othy,is,a,een,thy,othea\",\n  \"cla\": \"ra,udia,ire,rice,udette\",\n  \"eli\": \"zabeth,sa,sabeth,se,za\",\n  \"kar\": \"en,la,a,i,in\",\n  \"tam\": \"my,ara,i,mie,ika\",\n  \"ann\": \"a,,e,ie,ette\",\n  \"car\": \"men,rie,la,a,mela\",\n  \"mel\": \"issa,anie,inda\",\n  \"ali\": \"ce,cia,son,sha,sa\",\n  \"bri\": \"ttany,dget,ttney,dgette\",\n  \"lyn\": \"n,da,ne,ette\",\n  \"del\": \"ores,la,ia,oris\",\n  \"ter\": \"esa,ri,i\",\n  \"son\": \"ia,ya,ja,dra\",\n  \"deb\": \"orah,ra,bie,ora\",\n  \"jac\": \"queline,kie,quelyn,lyn\",\n  \"lat\": \"oya,asha,onya,isha\",\n  \"che\": \"ryl,lsea,ri,rie\",\n  \"vic\": \"toria,ki,kie,ky\",\n  \"sus\": \"an,ie,anne,ana\",\n  \"rob\": \"erta,yn\",\n  \"est\": \"her,elle,ella,er\",\n  \"lea\": \"h,,nne,nn\",\n  \"lil\": \"lian,lie,a,y\",\n  \"ma\": \"ureen,ttie,xine,bel,e,deline,ggie,mie,ble,ndy,ude,yra,nuela,vis,gdalena,tilda\",\n  \"jo\": \"yce,sephine,,di,dy,hanna,sefina,sie,celyn,lene,ni,die\",\n  \"be\": \"verly,rtha,atrice,rnice,th,ssie,cky,linda,ulah,rnadette,thany,tsy,atriz\",\n  \"ca\": \"therine,thy,ssandra,ndace,ndice,mille,itlin,ssie,thleen,llie\",\n  \"le\": \"slie,na,ona,ticia,igh,la,nora,ola,sley,ila\",\n  \"el\": \"aine,len,eanor,sie,la,ena,oise,vira,sa,va,ma\",\n  \"sa\": \"ndra,rah,ra,lly,mantha,brina,ndy,die,llie\",\n  \"mi\": \"chelle,ldred,chele,nnie,riam,sty,ndy,randa,llie\",\n  \"co\": \"nnie,lleen,nstance,urtney,ra,rinne,nsuelo,rnelia\",\n  \"ju\": \"lie,dith,dy,lia,anita,ana,stine\",\n  \"da\": \"wn,nielle,rlene,na,isy,rla,phne\",\n  \"re\": \"becca,nee,na,bekah,ba\",\n  \"al\": \"ma,lison,berta,exandra,yssa,ta\",\n  \"ra\": \"chel,mona,chael,quel,chelle\",\n  \"an\": \"drea,ita,a,gie,toinette,tonia\",\n  \"ge\": \"raldine,rtrude,orgia,nevieve,orgina\",\n  \"de\": \"nise,anna,siree,na,ana,e\",\n  \"ja\": \"smine,na,yne\",\n  \"lu\": \"cy,z,la,pe,ella,isa\",\n  \"je\": \"ssica,nifer,well,ri\",\n  \"ad\": \"a,rienne,die,ele,riana,eline\",\n  \"pa\": \"tricia,mela,ula,uline,tsy,m,tty,ulette,tti,trice,trica,ige\",\n  \"ke\": \"ndra,rri,isha,ri\",\n  \"mo\": \"nica,lly,nique,na,llie\",\n  \"lo\": \"uise,is,la\",\n  \"he\": \"len,ather,idi,nrietta,lene,lena\",\n  \"me\": \"gan,rcedes,redith,ghan,agan\",\n  \"wi\": \"lma,lla,nnie\",\n  \"ga\": \"il,yle,briela,brielle,le\",\n  \"er\": \"in,ica,ika,ma,nestine\",\n  \"ce\": \"cilia,lia,celia,leste,cile\",\n  \"ka\": \"tie,y,trina,yla,te\",\n  \"ol\": \"ga,ivia,lie,a\",\n  \"li\": \"nda,sa,ndsay,ndsey,zzie\",\n  \"na\": \"ncy,talie,omi,tasha,dine\",\n  \"la\": \"verne,na,donna,ra\",\n  \"vi\": \"rginia,vian,ola\",\n  \"ha\": \"rriet,nnah\",\n  \"pe\": \"ggy,arl,nny,tra\",\n  \"br\": \"enda,andi,ooke\",\n  \"ki\": \"mberly,m,mberley,rsten\",\n  \"au\": \"drey,tumn,dra\",\n  \"bo\": \"nnie,bbie,nita,bbi\",\n  \"do\": \"nna,lores,lly,minique\",\n  \"gl\": \"oria,adys,enda,enna\",\n  \"tr\": \"icia,ina,isha,udy\",\n  \"ta\": \"ra,nya,sha,bitha\",\n  \"ro\": \"sie,xanne,chelle,nda\",\n  \"am\": \"y,anda,ber,elia\",\n  \"fa\": \"ye,nnie,y\",\n  \"ni\": \"cole,na,chole,kki\",\n  \"ve\": \"ronica,ra,lma,rna\",\n  \"gr\": \"ace,etchen,aciela,acie\",\n  \"b\": \"arbara,lanca,arbra,ianca\",\n  \"r\": \"uth,ita,honda\",\n  \"s\": \"hirley,tephanie,ylvia,heila,uzanne,ue,tella,ophia,ilvia,ophie,tefanie,heena,ummer,elma,ocorro,ybil,imone\",\n  \"c\": \"ynthia,rystal,indy,harlene,ristina,leo\",\n  \"e\": \"velyn,mily,dna,dith,thel,mma,va,ileen,unice,ula,ssie,ffie,tta,ugenia\",\n  \"a\": \"shley,pril,gnes,rlene,imee,bigail,ida,bby,ileen\",\n  \"t\": \"heresa,ina,iffany,helma,onya,oni,herese,onia\",\n  \"i\": \"rene,da,rma,sabel,nez,ngrid,va,mogene,sabelle\",\n  \"w\": \"anda,endy,hitney\",\n  \"p\": \"hyllis,riscilla,olly\",\n  \"n\": \"orma,ellie,ora,ettie,ell\",\n  \"f\": \"lorence,elicia,lora,reda,ern,rieda\",\n  \"v\": \"alerie,anessa\",\n  \"j\": \"ill,illian\",\n  \"y\": \"vonne,olanda,vette\",\n  \"g\": \"ina,wendolyn,wen,oldie\",\n  \"l\": \"ydia\",\n  \"m\": \"yrtle,yra,uriel,yrna\",\n  \"h\": \"ilda\",\n  \"o\": \"pal,ra,felia\",\n  \"k\": \"rystal\",\n  \"d\": \"ixie,ina\",\n  \"u\": \"rsula\"\n};\nlet ambiguous = [\n  \"casey\",\n  \"jamie\",\n  \"lee\",\n  \"jaime\",\n  \"jessie\",\n  \"morgan\",\n  \"rene\",\n  \"robin\",\n  \"devon\",\n  \"kerry\",\n  \"alexis\",\n  \"guadalupe\",\n  \"blair\",\n  \"kasey\",\n  \"jean\",\n  \"marion\",\n  \"aubrey\",\n  \"shelby\",\n  \"jan\",\n  \"shea\",\n  \"jade\",\n  \"kenyatta\",\n  \"kelsey\",\n  \"shay\",\n  \"lashawn\",\n  \"trinity\",\n  \"regan\",\n  \"jammie\",\n  \"cassidy\",\n  \"cheyenne\",\n  \"reagan\",\n  \"shiloh\",\n  \"marlo\",\n  \"andra\",\n  \"devan\",\n  \"rosario\",\n  \"lee\"\n];\n\n//add data into the main obj\n//males\nlet keys = Object.keys(male_names);\nlet l = keys.length;\nfor (let i = 0; i < l; i++) {\n  let arr = male_names[keys[i]].split(\",\");\n  for (let i2 = 0; i2 < arr.length; i2++) {\n    main[keys[i] + arr[i2]] = \"m\";\n  }\n}\n\n//females\nkeys = Object.keys(female_names);\nl = keys.length;\nfor (let i = 0; i < l; i++) {\n  let arr = female_names[keys[i]].split(\",\");\n  for (let i2 = 0; i2 < arr.length; i2++) {\n    main[keys[i] + arr[i2]] = \"f\";\n  }\n}\n//unisex names\nl = ambiguous.length;\nfor (let i = 0; i < l; i += 1) {\n  main[ambiguous[i]] = \"a\";\n}\n// console.log(firstnames['spencer'])\n// console.log(firstnames['jill'])\n// console.log(firstnames['sue'])\n// console.log(firstnames['jan'])\n// console.log(JSON.stringify(Object.keys(firstnames).length, null, 2));\n\nmodule.exports = main;\n\n},{}],6:[function(require,module,exports){\n//these are common person titles used in the lexicon and sentence segmentation methods\n//they are also used to identify that a noun is a person\nmodule.exports = [\n  //honourifics\n  \"jr\",\n  \"mr\",\n  \"mrs\",\n  \"ms\",\n  \"dr\",\n  \"prof\",\n  \"sr\",\n  \"sen\",\n  \"corp\",\n  \"rep\",\n  \"gov\",\n  \"atty\",\n  \"supt\",\n  \"det\",\n  \"rev\",\n  \"col\",\n  \"gen\",\n  \"lt\",\n  \"cmdr\",\n  \"adm\",\n  \"capt\",\n  \"sgt\",\n  \"cpl\",\n  \"maj\",\n  \"miss\",\n  \"misses\",\n  \"mister\",\n  \"sir\",\n  \"esq\",\n  \"mstr\",\n  \"phd\",\n  \"adj\",\n  \"adv\",\n  \"asst\",\n  \"bldg\",\n  \"brig\",\n  \"comdr\",\n  \"hon\",\n  \"messrs\",\n  \"mlle\",\n  \"mme\",\n  \"op\",\n  \"ord\",\n  \"pvt\",\n  \"reps\",\n  \"res\",\n  \"sens\",\n  \"sfc\",\n  \"surg\",\n];\n\n},{}],7:[function(require,module,exports){\n//nouns with irregular plural/singular forms\n//used in noun.inflect, and also in the lexicon.\n//compressed with '_' to reduce some redundancy.\n\"use strict\";\nlet main = [\n  [\"child\", \"_ren\"],\n  [\"person\", \"people\"],\n  [\"leaf\", \"leaves\"],\n  [\"database\", \"_s\"],\n  [\"quiz\", \"_zes\"],\n  [\"child\", \"_ren\"],\n  [\"stomach\", \"_s\"],\n  [\"sex\", \"_es\"],\n  [\"move\", \"_s\"],\n  [\"shoe\", \"_s\"],\n  [\"goose\", \"geese\"],\n  [\"phenomenon\", \"phenomena\"],\n  [\"barracks\", \"_\"],\n  [\"deer\", \"_\"],\n  [\"syllabus\", \"syllabi\"],\n  [\"index\", \"indices\"],\n  [\"appendix\", \"appendices\"],\n  [\"criterion\", \"criteria\"],\n  [\"man\", \"men\"],\n  [\"sex\", \"_es\"],\n  [\"rodeo\", \"_s\"],\n  [\"epoch\", \"_s\"],\n  [\"zero\", \"_s\"],\n  [\"avocado\", \"_s\"],\n  [\"halo\", \"_s\"],\n  [\"tornado\", \"_s\"],\n  [\"tuxedo\", \"_s\"],\n  [\"sombrero\", \"_s\"],\n  [\"addendum\", \"addenda\"],\n  [\"alga\", \"_e\"],\n  [\"alumna\", \"_e\"],\n  [\"alumnus\", \"alumni\"],\n  [\"bacillus\", \"bacilli\"],\n  [\"cactus\", \"cacti\"],\n  [\"beau\", \"_x\"],\n  [\"château\", \"_x\"],\n  [\"chateau\", \"_x\"],\n  [\"tableau\", \"_x\"],\n  [\"corpus\", \"corpora\"],\n  [\"curriculum\", \"curricula\"],\n  [\"echo\", \"_es\"],\n  [\"embargo\", \"_es\"],\n  [\"foot\", \"feet\"],\n  [\"genus\", \"genera\"],\n  [\"hippopotamus\", \"hippopotami\"],\n  [\"larva\", \"_e\"],\n  [\"libretto\", \"libretti\"],\n  [\"loaf\", \"loaves\"],\n  [\"matrix\", \"matrices\"],\n  [\"memorandum\", \"memoranda\"],\n  [\"mosquito\", \"_es\"],\n  [\"opus\", \"opera\"],\n  [\"ovum\", \"ova\"],\n  [\"ox\", \"_en\"],\n  [\"radius\", \"radii\"],\n  [\"referendum\", \"referenda\"],\n  [\"thief\", \"thieves\"],\n  [\"tooth\", \"teeth\"]\n];\n\nmain = main.map(function(a) {\n  a[1] = a[1].replace(\"_\", a[0]);\n  return a;\n});\n\nmodule.exports = main;\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nlet misc = {\n\n  \"etc\": \"FW\", //foreign words\n  \"ie\": \"FW\",\n\n  \"there\": \"EX\",\n\n  \"better\": \"JJR\",\n  \"earlier\": \"JJR\",\n\n  \"has\": \"VB\",\n  \"more\": \"RBR\",\n\n  \"sounds\": \"VBZ\"\n};\n\nlet compact = {\n  //conjunctions\n  \"CC\": [\n    \"yet\",\n    \"therefore\",\n    \"or\",\n    \"while\",\n    \"nor\",\n    \"whether\",\n    \"though\",\n    \"because\",\n    \"but\",\n    \"for\",\n    \"and\",\n    \"if\",\n    \"however\",\n    \"before\",\n    \"although\",\n    \"how\",\n    \"plus\",\n    \"versus\",\n    \"not\"\n  ],\n\n  \"VBD\": [\n    \"where'd\",\n    \"when'd\",\n    \"how'd\",\n    \"what'd\",\n    \"said\",\n    \"had\",\n    \"been\",\n    \"began\",\n    \"came\",\n    \"did\",\n    \"meant\",\n    \"went\"\n  ],\n\n  \"VBN\": [\n    \"given\",\n    \"known\",\n    \"shown\",\n    \"seen\",\n    \"born\",\n  ],\n\n  \"VBG\": [\n    \"going\",\n    \"being\",\n    \"according\",\n    \"resulting\",\n    \"developing\",\n    \"staining\"\n  ],\n\n  //copula\n  \"CP\": [\n    \"is\",\n    \"will be\",\n    \"are\",\n    \"was\",\n    \"were\",\n    \"am\",\n    \"isn't\",\n    \"ain't\",\n    \"aren't\"\n  ],\n\n  //determiners\n  \"DT\": [\n    \"this\",\n    \"any\",\n    \"enough\",\n    \"each\",\n    \"whatever\",\n    \"every\",\n    \"which\",\n    \"these\",\n    \"another\",\n    \"plenty\",\n    \"whichever\",\n    \"neither\",\n    \"an\",\n    \"a\",\n    \"least\",\n    \"own\",\n    \"few\",\n    \"both\",\n    \"those\",\n    \"the\",\n    \"that\",\n    \"various\",\n    \"what\",\n    \"either\",\n    \"much\",\n    \"some\",\n    \"else\",\n    \"no\",\n    //some other languages (what could go wrong?)\n    \"la\",\n    \"le\",\n    \"les\",\n    \"des\",\n    \"de\",\n    \"du\",\n    \"el\"\n  ],\n\n  //prepositions\n  \"IN\": [\n    \"until\",\n    \"onto\",\n    \"of\",\n    \"into\",\n    \"out\",\n    \"except\",\n    \"across\",\n    \"by\",\n    \"between\",\n    \"at\",\n    \"down\",\n    \"as\",\n    \"from\",\n    \"around\",\n    \"with\",\n    \"among\",\n    \"upon\",\n    \"amid\",\n    \"to\",\n    \"along\",\n    \"since\",\n    \"about\",\n    \"off\",\n    \"on\",\n    \"within\",\n    \"in\",\n    \"during\",\n    \"per\",\n    \"without\",\n    \"throughout\",\n    \"through\",\n    \"than\",\n    \"via\",\n    \"up\",\n    \"unlike\",\n    \"despite\",\n    \"below\",\n    \"unless\",\n    \"towards\",\n    \"besides\",\n    \"after\",\n    \"whereas\",\n    \"'o\",\n    \"amidst\",\n    \"amongst\",\n    \"apropos\",\n    \"atop\",\n    \"barring\",\n    \"chez\",\n    \"circa\",\n    \"mid\",\n    \"midst\",\n    \"notwithstanding\",\n    \"qua\",\n    \"sans\",\n    \"vis-a-vis\",\n    \"thru\",\n    \"till\",\n    \"versus\",\n    \"without\",\n    \"w/o\",\n    \"o'\",\n    \"a'\",\n  ],\n\n  //modal verbs\n  \"MD\": [\n    \"can\",\n    \"may\",\n    \"could\",\n    \"might\",\n    \"will\",\n    \"ought to\",\n    \"would\",\n    \"must\",\n    \"shall\",\n    \"should\",\n    \"ought\",\n    \"shouldn't\",\n    \"wouldn't\",\n    \"couldn't\",\n    \"mustn't\",\n    \"shan't\",\n    \"shant\",\n    \"lets\", //arguable\n    \"who'd\",\n    \"let's\"\n  ],\n\n  //posessive pronouns\n  \"PP\": [\n    \"mine\",\n    \"something\",\n    \"none\",\n    \"anything\",\n    \"anyone\",\n    \"theirs\",\n    \"himself\",\n    \"ours\",\n    \"his\",\n    \"my\",\n    \"their\",\n    \"yours\",\n    \"your\",\n    \"our\",\n    \"its\",\n    \"nothing\",\n    \"herself\",\n    \"hers\",\n    \"themselves\",\n    \"everything\",\n    \"myself\",\n    \"itself\",\n    \"her\", //this one is pretty ambiguous\n    \"who\",\n    \"whom\",\n    \"whose\"\n  ],\n\n  //personal pronouns (nouns)\n  \"PRP\": [\n    \"it\",\n    \"they\",\n    \"i\",\n    \"them\",\n    \"you\",\n    \"she\",\n    \"me\",\n    \"he\",\n    \"him\",\n    \"ourselves\",\n    \"us\",\n    \"we\",\n    \"thou\",\n    \"il\",\n    \"elle\",\n    \"yourself\",\n    \"'em\"\n  ],\n\n  //some manual adverbs (the rest are generated)\n  \"RB\": [\n    \"now\",\n    \"again\",\n    \"already\",\n    \"soon\",\n    \"directly\",\n    \"toward\",\n    \"forever\",\n    \"apart\",\n    \"instead\",\n    \"yes\",\n    \"alone\",\n    \"ago\",\n    \"indeed\",\n    \"ever\",\n    \"quite\",\n    \"perhaps\",\n    \"where\",\n    \"then\",\n    \"here\",\n    \"thus\",\n    \"very\",\n    \"often\",\n    \"once\",\n    \"never\",\n    \"why\",\n    \"when\",\n    \"away\",\n    \"always\",\n    \"sometimes\",\n    \"also\",\n    \"maybe\",\n    \"so\",\n    \"just\",\n    \"well\",\n    \"several\",\n    \"such\",\n    \"randomly\",\n    \"too\",\n    \"rather\",\n    \"abroad\",\n    \"almost\",\n    \"anyway\",\n    \"twice\",\n    \"aside\",\n    \"moreover\",\n    \"anymore\",\n    \"newly\",\n    \"damn\",\n    \"somewhat\",\n    \"somehow\",\n    \"meanwhile\",\n    \"hence\",\n    \"further\",\n    \"furthermore\"\n  ],\n\n  //interjections\n  \"UH\": [\n    \"uhh\",\n    \"uh-oh\",\n    \"ugh\",\n    \"sheesh\",\n    \"eww\",\n    \"pff\",\n    \"voila\",\n    \"oy\",\n    \"eep\",\n    \"hurrah\",\n    \"yuck\",\n    \"ow\",\n    \"duh\",\n    \"oh\",\n    \"hmm\",\n    \"yeah\",\n    \"whoa\",\n    \"ooh\",\n    \"whee\",\n    \"ah\",\n    \"bah\",\n    \"gah\",\n    \"yaa\",\n    \"phew\",\n    \"gee\",\n    \"ahem\",\n    \"eek\",\n    \"meh\",\n    \"yahoo\",\n    \"oops\",\n    \"d'oh\",\n    \"psst\",\n    \"argh\",\n    \"grr\",\n    \"nah\",\n    \"shhh\",\n    \"whew\",\n    \"mmm\",\n    \"yay\",\n    \"uh-huh\",\n    \"boo\",\n    \"wow\",\n    \"nope\"\n  ],\n\n  //nouns that shouldnt be seen as a verb\n  \"NN\": [\n    \"president\",\n    \"dollar\",\n    \"student\",\n    \"patent\",\n    \"funding\",\n    \"morning\",\n    \"banking\",\n    \"ceiling\",\n    \"energy\",\n    \"secretary\",\n    \"purpose\",\n    \"friends\",\n    \"event\"\n  ]\n};\n//unpack the compact terms into the misc lexicon..\nlet keys = Object.keys(compact);\nfor (let i = 0; i < keys.length; i++) {\n  let arr = compact[keys[i]];\n  for (let i2 = 0; i2 < arr.length; i2++) {\n    misc[arr[i2]] = keys[i];\n  }\n}\n\nmodule.exports = misc;\n\n},{}],9:[function(require,module,exports){\n//common terms that are multi-word, but one part-of-speech\n//these should not include phrasal verbs, like 'looked out'. These are handled elsewhere.\nmodule.exports = {\n  \"of course\": \"RB\",\n  \"at least\": \"RB\",\n  \"no longer\": \"RB\",\n  \"sort of\": \"RB\",\n  \"at first\": \"RB\",\n  \"once again\": \"RB\",\n  \"once more\": \"RB\",\n  \"up to\": \"RB\",\n  \"by now\": \"RB\",\n  \"all but\": \"RB\",\n  \"just about\": \"RB\",\n  \"on board\": \"JJ\",\n  \"a lot\": \"RB\",\n  \"by far\": \"RB\",\n  \"at best\": \"RB\",\n  \"at large\": \"RB\",\n  \"for good\": \"RB\",\n  \"vice versa\": \"JJ\",\n  \"en route\": \"JJ\",\n  \"for sure\": \"RB\",\n  \"upside down\": \"JJ\",\n  \"at most\": \"RB\",\n  \"per se\": \"RB\",\n  \"at worst\": \"RB\",\n  \"upwards of\": \"RB\",\n  \"en masse\": \"RB\",\n  \"point blank\": \"RB\",\n  \"up front\": \"JJ\",\n  \"in situ\": \"JJ\",\n  \"in vitro\": \"JJ\",\n  \"ad hoc\": \"JJ\",\n  \"de facto\": \"JJ\",\n  \"ad infinitum\": \"JJ\",\n  \"ad nauseam\": \"RB\",\n  \"for keeps\": \"JJ\",\n  \"a priori\": \"FW\",\n  \"et cetera\": \"FW\",\n  \"off guard\": \"JJ\",\n  \"spot on\": \"JJ\",\n  \"ipso facto\": \"JJ\",\n  \"not withstanding\": \"RB\",\n  \"de jure\": \"RB\",\n  \"a la\": \"IN\",\n  \"ad hominem\": \"NN\",\n  \"par excellence\": \"RB\",\n  \"de trop\": \"RB\",\n  \"a posteriori\": \"RB\",\n  \"fed up\": \"JJ\",\n  \"brand new\": \"JJ\",\n  \"old fashioned\": \"JJ\",\n  \"bona fide\": \"JJ\",\n  \"well off\": \"JJ\",\n  \"far off\": \"JJ\",\n  \"straight forward\": \"JJ\",\n  \"hard up\": \"JJ\",\n  \"sui generis\": \"JJ\",\n  \"en suite\": \"JJ\",\n  \"avant garde\": \"JJ\",\n  \"sans serif\": \"JJ\",\n  \"gung ho\": \"JJ\",\n  \"super duper\": \"JJ\",\n  \"new york\": \"NN\",\n  \"new england\": \"NN\",\n  \"new hampshire\": \"NN\",\n  \"new delhi\": \"NN\",\n  \"new jersey\": \"NN\",\n  \"new mexico\": \"NN\",\n  \"united states\": \"NN\",\n  \"united kingdom\": \"NN\",\n  \"great britain\": \"NN\",\n  \"head start\": \"NN\"\n};\n\n},{}],10:[function(require,module,exports){\nmodule.exports = [\n  //numbers\n  \"minus\",\n  \"zero\",\n  \"one\",\n  \"two\",\n  \"three\",\n  \"four\",\n  \"five\",\n  \"six\",\n  \"seven\",\n  \"eight\",\n  \"nine\",\n  \"ten\",\n  \"eleven\",\n  \"twelve\",\n  \"thirteen\",\n  \"fourteen\",\n  \"fifteen\",\n  \"sixteen\",\n  \"seventeen\",\n  \"eighteen\",\n  \"nineteen\",\n  \"twenty\",\n  \"thirty\",\n  \"forty\",\n  \"fifty\",\n  \"sixty\",\n  \"seventy\",\n  \"eighty\",\n  \"ninety\",\n  \"hundred\",\n  \"thousand\",\n  \"million\",\n  \"billion\",\n  \"trillion\",\n  \"quadrillion\",\n  \"quintillion\",\n  \"sextillion\",\n  \"septillion\",\n  \"octillion\",\n  \"nonillion\",\n  \"decillion\"\n];\n\n},{}],11:[function(require,module,exports){\n//phrasal verbs are two words that really mean one verb.\n//'beef up' is one verb, and not some direction of beefing.\n//by @spencermountain, 2015 mit\n//many credits to http://www.allmyphrasalverbs.com/\n\"use strict\";\nlet verb_conjugate = require(\"../term/verb/conjugate/conjugate.js\");\n\n//start the list with some randoms\nlet main = [\n  \"be onto\",\n  \"fall behind\",\n  \"fall through\",\n  \"fool with\",\n  \"get across\",\n  \"get along\",\n  \"get at\",\n  \"give way\",\n  \"hear from\",\n  \"hear of\",\n  \"lash into\",\n  \"make do\",\n  \"run across\",\n  \"set upon\",\n  \"take aback\",\n  \"keep from\"\n];\n\n//if there's a phrasal verb \"keep on\", there's often a \"keep off\"\nlet opposites = {\n  \"away\": \"back\",\n  \"in\": \"out\",\n  \"on\": \"off\",\n  \"over\": \"under\",\n  \"together\": \"apart\",\n  \"up\": \"down\"\n};\n\n//forms that have in/out symmetry\nlet symmetric = {\n  \"away\": \"blow,bounce,bring,call,come,cut,drop,fire,get,give,go,keep,pass,put,run,send,shoot,switch,take,tie,throw\",\n  \"in\": \"bang,barge,bash,beat,block,book,box,break,bring,burn,butt,carve,cash,check,come,cross,drop,fall,fence,fill,give,grow,hand,hang,head,jack,keep,leave,let,lock,log,move,opt,pack,peel,pull,put,rain,reach,ring,rub,send,set,settle,shut,sign,smash,snow,strike,take,try,turn,type,warm,wave,wean,wear,wheel\",\n  \"on\": \"add,call,carry,catch,count,feed,get,give,go,grind,head,hold,keep,lay,log,pass,pop,power,put,send,show,snap,switch,take,tell,try,turn,wait\",\n  \"over\": \"come,go,look,read,run,talk\",\n  \"together\": \"come,pull,put\",\n  \"up\": \"add,back,beat,bend,blow,boil,bottle,break,bring,buckle,bundle,call,carve,clean,cut,dress,fill,flag,fold,get,give,grind,grow,hang,hold,keep,let,load,lock,look,man,mark,melt,move,pack,pin,pipe,plump,pop,power,pull,put,rub,scale,scrape,send,set,settle,shake,show,sit,slow,smash,square,stand,strike,take,tear,tie,turn,use,wash,wind\",\n};\nObject.keys(symmetric).forEach(function(k) {\n  symmetric[k].split(\",\").forEach(function(s) {\n    //add the given form\n    main.push(s + \" \" + k);\n    //add its opposite form\n    main.push(s + \" \" + opposites[k]);\n  });\n});\n\n//forms that don't have in/out symmetry\nlet asymmetric = {\n  \"about\": \"bring,fool,gad,go,root\",\n  \"after\": \"go,look,take\",\n  \"ahead\": \"get,go,press\",\n  \"along\": \"bring,move\",\n  \"apart\": \"fall,take\",\n  \"around\": \"ask,boss,bring,call,come,fool,get,horse,joke,lie,mess,play\",\n  \"away\": \"back,carry,file,frighten,hide,wash\",\n  \"back\": \"fall,fight,hit,hold,look,pay,stand,think\",\n  \"by\": \"drop,get,go,stop,swear,swing,tick,zip\",\n  \"down\": \"bog,calm,fall,hand,hunker,jot,knock,lie,narrow,note,pat,pour,run,tone,trickle,wear\",\n  \"for\": \"fend,file,gun,hanker,root,shoot\",\n  \"forth\": \"bring,come\",\n  \"forward\": \"come,look\",\n  \"in\": \"cave,chip,hone,jump,key,pencil,plug,rein,shade,sleep,stop,suck,tie,trade,tuck,usher,weigh,zero\",\n  \"into\": \"look,run\",\n  \"it\": \"go,have\",\n  \"off\": \"auction,be,beat,blast,block,brush,burn,buzz,cast,cool,drop,end,face,fall,fend,frighten,goof,jack,kick,knock,laugh,level,live,make,mouth,nod,pair,pay,peel,read,reel,ring,rip,round,sail,shave,shoot,sleep,slice,split,square,stave,stop,storm,strike,tear,tee,tick,tip,top,walk,work,write\",\n  \"on\": \"bank,bargain,egg,frown,hit,latch,pile,prattle,press,spring,spur,tack,urge,yammer\",\n  \"out\": \"act,ask,back,bail,bear,black,blank,bleed,blow,blurt,branch,buy,cancel,cut,eat,edge,farm,figure,find,fill,find,fish,fizzle,flake,flame,flare,flesh,flip,geek,get,help,hide,hold,iron,knock,lash,level,listen,lose,luck,make,max,miss,nerd,pan,pass,pick,pig,point,print,psych,rat,read,rent,root,rule,run,scout,see,sell,shout,single,sit,smoke,sort,spell,splash,stamp,start,storm,straighten,suss,time,tire,top,trip,trot,wash,watch,weird,whip,wimp,wipe,work,zone,zonk\",\n  \"over\": \"bend,bubble,do,fall,get,gloss,hold,keel,mull,pore,sleep,spill,think,tide,tip\",\n  \"round\": \"get,go\",\n  \"through\": \"go,run\",\n  \"to\": \"keep,see\",\n  \"up\": \"act,beef,board,bone,boot,brighten,build,buy,catch,cheer,cook,end,eye,face,fatten,feel,fess,finish,fire,firm,flame,flare,free,freeze,freshen,fry,fuel,gang,gear,goof,hack,ham,heat,hit,hole,hush,jazz,juice,lap,light,lighten,line,link,listen,live,loosen,make,mash,measure,mess,mix,mock,mop,muddle,open,own,pair,patch,pick,prop,psych,read,rough,rustle,save,shack,sign,size,slice,slip,snap,sober,spark,split,spruce,stack,start,stay,stir,stitch,straighten,string,suck,suit,sum,team,tee,think,tidy,tighten,toss,trade,trip,type,vacuum,wait,wake,warm,weigh,whip,wire,wise,word,write,zip\",\n};\nObject.keys(asymmetric).forEach(function(k) {\n  asymmetric[k].split(\",\").forEach(function(s) {\n    main.push(s + \" \" + k);\n  });\n});\n\n//at his point all verbs are infinitive. lets make this explicit.\nmain = main.reduce(function(h, s) {\n  h[s] = \"VBP\";\n  return h;\n}, {});\n\n//conjugate every phrasal verb. takes ~30ms\nlet tags = {\n  present: \"VB\",\n  past: \"VBD\",\n  future: \"VBF\",\n  gerund: \"VBG\",\n  infinitive: \"VBP\",\n};\nlet cache = {}; //cache individual verbs to speed it up\nlet split, verb, particle, phrasal;\nObject.keys(main).forEach(function(s) {\n  split = s.split(\" \");\n  verb = split[0];\n  particle = split[1];\n  if (cache[verb] === undefined) {\n    cache[verb] = verb_conjugate(verb);\n  }\n  Object.keys(cache[verb]).forEach(function(k) {\n    phrasal = cache[verb][k] + \" \" + particle;\n    if (tags[k]) {\n      main[phrasal] = tags[k];\n    }\n  });\n});\n\n// console.log(main[\"wiring up\"] === \"VBG\")\nmodule.exports = main;\n\n},{\"../term/verb/conjugate/conjugate.js\":44}],12:[function(require,module,exports){\n//common nouns that have no plural form. These are suprisingly rare\n//used in noun.inflect(), and added as nouns in lexicon\nmodule.exports = [\n  \"aircraft\",\n  \"bass\",\n  \"bison\",\n  \"fowl\",\n  \"halibut\",\n  \"moose\",\n  \"salmon\",\n  \"spacecraft\",\n  \"tuna\",\n  \"trout\",\n  \"advice\",\n  \"information\",\n  \"knowledge\",\n  \"trouble\",\n  \"enjoyment\",\n  \"fun\",\n  \"recreation\",\n  \"relaxation\",\n  \"meat\",\n  \"rice\",\n  \"bread\",\n  \"cake\",\n  \"coffee\",\n  \"ice\",\n  \"water\",\n  \"oil\",\n  \"grass\",\n  \"hair\",\n  \"fruit\",\n  \"wildlife\",\n  \"equipment\",\n  \"machinery\",\n  \"furniture\",\n  \"mail\",\n  \"luggage\",\n  \"jewelry\",\n  \"clothing\",\n  \"money\",\n  \"mathematics\",\n  \"economics\",\n  \"physics\",\n  \"civics\",\n  \"ethics\",\n  \"gymnastics\",\n  \"mumps\",\n  \"measles\",\n  \"news\",\n  \"tennis\",\n  \"baggage\",\n  \"currency\",\n  \"soap\",\n  \"toothpaste\",\n  \"food\",\n  \"sugar\",\n  \"butter\",\n  \"flour\",\n  \"research\",\n  \"leather\",\n  \"wool\",\n  \"wood\",\n  \"coal\",\n  \"weather\",\n  \"homework\",\n  \"cotton\",\n  \"silk\",\n  \"patience\",\n  \"impatience\",\n  \"vinegar\",\n  \"art\",\n  \"beef\",\n  \"blood\",\n  \"cash\",\n  \"chaos\",\n  \"cheese\",\n  \"chewing\",\n  \"conduct\",\n  \"confusion\",\n  \"education\",\n  \"electricity\",\n  \"entertainment\",\n  \"fiction\",\n  \"forgiveness\",\n  \"gold\",\n  \"gossip\",\n  \"ground\",\n  \"happiness\",\n  \"history\",\n  \"honey\",\n  \"hospitality\",\n  \"importance\",\n  \"justice\",\n  \"laughter\",\n  \"leisure\",\n  \"lightning\",\n  \"literature\",\n  \"luck\",\n  \"melancholy\",\n  \"milk\",\n  \"mist\",\n  \"music\",\n  \"noise\",\n  \"oxygen\",\n  \"paper\",\n  \"pay\",\n  \"peace\",\n  \"peanut\",\n  \"pepper\",\n  \"petrol\",\n  \"plastic\",\n  \"pork\",\n  \"power\",\n  \"pressure\",\n  \"rain\",\n  \"recognition\",\n  \"sadness\",\n  \"safety\",\n  \"salt\",\n  \"sand\",\n  \"scenery\",\n  \"shopping\",\n  \"silver\",\n  \"snow\",\n  \"softness\",\n  \"space\",\n  \"speed\",\n  \"steam\",\n  \"sunshine\",\n  \"tea\",\n  \"thunder\",\n  \"time\",\n  \"traffic\",\n  \"trousers\",\n  \"violence\",\n  \"warmth\",\n  \"wine\",\n  \"steel\",\n  \"soccer\",\n  \"hockey\",\n  \"golf\",\n  \"fish\",\n  \"gum\",\n  \"liquid\",\n  \"series\",\n  \"sheep\",\n  \"species\",\n  \"fahrenheit\",\n  \"celcius\",\n  \"kelvin\",\n  \"hertz\"\n];\n\n},{}],13:[function(require,module,exports){\n//most-frequent non-irregular verbs, to be conjugated for the lexicon\n//this list is the seed, from which various forms are conjugated\nmodule.exports = [\n  \"collapse\",\n  \"stake\",\n  \"forsee\",\n  \"suck\",\n  \"answer\",\n  \"argue\",\n  \"tend\",\n  \"examine\",\n  \"depend\",\n  \"form\",\n  \"figure\",\n  \"mind\",\n  \"surround\",\n  \"suspect\",\n  \"reflect\",\n  \"wonder\",\n  \"hope\",\n  \"end\",\n  \"thank\",\n  \"file\",\n  \"regard\",\n  \"report\",\n  \"imagine\",\n  \"consider\",\n  \"ensure\",\n  \"cause\",\n  \"work\",\n  \"enter\",\n  \"stop\",\n  \"defeat\",\n  \"surge\",\n  \"launch\",\n  \"turn\",\n  \"like\",\n  \"control\",\n  \"relate\",\n  \"remember\",\n  \"join\",\n  \"listen\",\n  \"train\",\n  \"spring\",\n  \"enjoy\",\n  \"fail\",\n  \"recognize\",\n  \"obtain\",\n  \"learn\",\n  \"fill\",\n  \"announce\",\n  \"prevent\",\n  \"achieve\",\n  \"realize\",\n  \"involve\",\n  \"remove\",\n  \"aid\",\n  \"visit\",\n  \"test\",\n  \"prepare\",\n  \"ask\",\n  \"carry\",\n  \"suppose\",\n  \"determine\",\n  \"raise\",\n  \"love\",\n  \"use\",\n  \"pull\",\n  \"improve\",\n  \"contain\",\n  \"offer\",\n  \"talk\",\n  \"pick\",\n  \"care\",\n  \"express\",\n  \"remain\",\n  \"operate\",\n  \"close\",\n  \"add\",\n  \"mention\",\n  \"support\",\n  \"decide\",\n  \"walk\",\n  \"vary\",\n  \"demand\",\n  \"describe\",\n  \"agree\",\n  \"happen\",\n  \"allow\",\n  \"suffer\",\n  \"study\",\n  \"press\",\n  \"watch\",\n  \"seem\",\n  \"occur\",\n  \"contribute\",\n  \"claim\",\n  \"compare\",\n  \"apply\",\n  \"direct\",\n  \"discuss\",\n  \"indicate\",\n  \"require\",\n  \"change\",\n  \"fix\",\n  \"reach\",\n  \"prove\",\n  \"expect\",\n  \"exist\",\n  \"play\",\n  \"permit\",\n  \"kill\",\n  \"charge\",\n  \"increase\",\n  \"believe\",\n  \"create\",\n  \"continue\",\n  \"live\",\n  \"help\",\n  \"represent\",\n  \"edit\",\n  \"serve\",\n  \"appear\",\n  \"cover\",\n  \"maintain\",\n  \"start\",\n  \"stay\",\n  \"move\",\n  \"extend\",\n  \"design\",\n  \"supply\",\n  \"suggest\",\n  \"want\",\n  \"approach\",\n  \"call\",\n  \"include\",\n  \"try\",\n  \"receive\",\n  \"save\",\n  \"discover\",\n  \"marry\",\n  \"need\",\n  \"establish\",\n  \"keep\",\n  \"assume\",\n  \"attend\",\n  \"unite\",\n  \"explain\",\n  \"publish\",\n  \"accept\",\n  \"settle\",\n  \"reduce\",\n  \"do\",\n  \"look\",\n  \"interact\",\n  \"concern\",\n  \"labor\",\n  \"return\",\n  \"select\",\n  \"die\",\n  \"provide\",\n  \"seek\",\n  \"wish\",\n  \"finish\",\n  \"follow\",\n  \"disagree\",\n  \"produce\",\n  \"attack\",\n  \"attempt\",\n  \"brake\",\n  \"brush\",\n  \"burn\",\n  \"bang\",\n  \"bomb\",\n  \"budget\",\n  \"comfort\",\n  \"cook\",\n  \"copy\",\n  \"cough\",\n  \"crush\",\n  \"cry\",\n  \"check\",\n  \"claw\",\n  \"clip\",\n  \"combine\",\n  \"damage\",\n  \"desire\",\n  \"doubt\",\n  \"drain\",\n  \"dance\",\n  \"decrease\",\n  \"defect\",\n  \"deposit\",\n  \"drift\",\n  \"dip\",\n  \"dive\",\n  \"divorce\",\n  \"dream\",\n  \"exchange\",\n  \"envy\",\n  \"exert\",\n  \"exercise\",\n  \"export\",\n  \"fold\",\n  \"flood\",\n  \"focus\",\n  \"forecast\",\n  \"fracture\",\n  \"grip\",\n  \"guide\",\n  \"guard\",\n  \"guarantee\",\n  \"guess\",\n  \"hate\",\n  \"heat\",\n  \"handle\",\n  \"hire\",\n  \"host\",\n  \"hunt\",\n  \"hurry\",\n  \"import\",\n  \"judge\",\n  \"jump\",\n  \"jam\",\n  \"kick\",\n  \"kiss\",\n  \"knock\",\n  \"laugh\",\n  \"lift\",\n  \"lock\",\n  \"lecture\",\n  \"link\",\n  \"load\",\n  \"loan\",\n  \"lump\",\n  \"melt\",\n  \"message\",\n  \"murder\",\n  \"neglect\",\n  \"overlap\",\n  \"overtake\",\n  \"overuse\",\n  \"print\",\n  \"protest\",\n  \"pump\",\n  \"push\",\n  \"post\",\n  \"progress\",\n  \"promise\",\n  \"purchase\",\n  \"regret\",\n  \"request\",\n  \"reward\",\n  \"roll\",\n  \"rub\",\n  \"rent\",\n  \"repair\",\n  \"sail\",\n  \"scale\",\n  \"screw\",\n  \"shock\",\n  \"sleep\",\n  \"slip\",\n  \"smash\",\n  \"smell\",\n  \"smoke\",\n  \"sneeze\",\n  \"snow\",\n  \"surprise\",\n  \"scratch\",\n  \"search\",\n  \"share\",\n  \"shave\",\n  \"spit\",\n  \"splash\",\n  \"stain\",\n  \"stress\",\n  \"switch\",\n  \"taste\",\n  \"touch\",\n  \"trade\",\n  \"trick\",\n  \"twist\",\n  \"trap\",\n  \"travel\",\n  \"tune\",\n  \"undergo\",\n  \"undo\",\n  \"uplift\",\n  \"vote\",\n  \"wash\",\n  \"wave\",\n  \"whistle\",\n  \"wreck\",\n  \"yawn\",\n  \"betray\",\n  \"restrict\",\n  \"perform\",\n  \"worry\",\n  \"point\",\n  \"activate\",\n  \"fear\",\n  \"plan\",\n  \"note\",\n  \"face\",\n  \"predict\",\n  \"differ\",\n  \"deserve\",\n  \"torture\",\n  \"recall\",\n  \"count\",\n  \"admit\",\n  \"insist\",\n  \"lack\",\n  \"pass\",\n  \"belong\",\n  \"complain\",\n  \"constitute\",\n  \"rely\",\n  \"refuse\",\n  \"range\",\n  \"cite\",\n  \"flash\",\n  \"arrive\",\n  \"reveal\",\n  \"consist\",\n  \"observe\",\n  \"notice\",\n  \"trust\",\n  \"display\",\n  \"view\",\n  \"stare\",\n  \"acknowledge\",\n  \"owe\",\n  \"gaze\",\n  \"treat\",\n  \"account\",\n  \"gather\",\n  \"address\",\n  \"confirm\",\n  \"estimate\",\n  \"manage\",\n  \"participate\",\n  \"sneak\",\n  \"drop\",\n  \"mirror\",\n  \"experience\",\n  \"strive\",\n  \"arch\",\n  \"dislike\",\n  \"favor\",\n  \"earn\",\n  \"emphasize\",\n  \"match\",\n  \"question\",\n  \"emerge\",\n  \"encourage\",\n  \"matter\",\n  \"name\",\n  \"head\",\n  \"line\",\n  \"slam\",\n  \"list\",\n  \"warn\",\n  \"ignore\",\n  \"resemble\",\n  \"feature\",\n  \"place\",\n  \"reverse\",\n  \"accuse\",\n  \"spoil\",\n  \"retain\",\n  \"survive\",\n  \"praise\",\n  \"function\",\n  \"please\",\n  \"date\",\n  \"remind\",\n  \"deliver\",\n  \"echo\",\n  \"engage\",\n  \"deny\",\n  \"yield\",\n  \"center\",\n  \"gain\",\n  \"anticipate\",\n  \"reason\",\n  \"side\",\n  \"thrive\",\n  \"defy\",\n  \"dodge\",\n  \"enable\",\n  \"applaud\",\n  \"bear\",\n  \"persist\",\n  \"pose\",\n  \"reject\",\n  \"attract\",\n  \"await\",\n  \"inhibit\",\n  \"declare\",\n  \"process\",\n  \"risk\",\n  \"urge\",\n  \"value\",\n  \"block\",\n  \"confront\",\n  \"credit\",\n  \"cross\",\n  \"amuse\",\n  \"dare\",\n  \"resent\",\n  \"smile\",\n  \"gloss\",\n  \"threaten\",\n  \"collect\",\n  \"depict\",\n  \"dismiss\",\n  \"submit\",\n  \"benefit\",\n  \"step\",\n  \"deem\",\n  \"limit\",\n  \"sense\",\n  \"issue\",\n  \"embody\",\n  \"force\",\n  \"govern\",\n  \"replace\",\n  \"bother\",\n  \"cater\",\n  \"adopt\",\n  \"empower\",\n  \"outweigh\",\n  \"alter\",\n  \"enrich\",\n  \"influence\",\n  \"prohibit\",\n  \"pursue\",\n  \"warrant\",\n  \"convey\",\n  \"approve\",\n  \"reserve\",\n  \"rest\",\n  \"strain\",\n  \"wander\",\n  \"adjust\",\n  \"dress\",\n  \"market\",\n  \"mingle\",\n  \"disapprove\",\n  \"evaluate\",\n  \"flow\",\n  \"inhabit\",\n  \"pop\",\n  \"rule\",\n  \"depart\",\n  \"roam\",\n  \"assert\",\n  \"disappear\",\n  \"envision\",\n  \"pause\",\n  \"afford\",\n  \"challenge\",\n  \"grab\",\n  \"grumble\",\n  \"house\",\n  \"portray\",\n  \"revel\",\n  \"base\",\n  \"conduct\",\n  \"review\",\n  \"stem\",\n  \"crave\",\n  \"mark\",\n  \"store\",\n  \"target\",\n  \"unlock\",\n  \"weigh\",\n  \"resist\",\n  \"drag\",\n  \"pour\",\n  \"reckon\",\n  \"assign\",\n  \"cling\",\n  \"rank\",\n  \"attach\",\n  \"decline\",\n  \"destroy\",\n  \"interfere\",\n  \"paint\",\n  \"skip\",\n  \"sprinkle\",\n  \"wither\",\n  \"allege\",\n  \"retire\",\n  \"score\",\n  \"monitor\",\n  \"expand\",\n  \"honor\",\n  \"pack\",\n  \"assist\",\n  \"float\",\n  \"appeal\",\n  \"stretch\",\n  \"undermine\",\n  \"assemble\",\n  \"boast\",\n  \"bounce\",\n  \"grasp\",\n  \"install\",\n  \"borrow\",\n  \"crack\",\n  \"elect\",\n  \"shout\",\n  \"contrast\",\n  \"overcome\",\n  \"relax\",\n  \"relent\",\n  \"strengthen\",\n  \"conform\",\n  \"dump\",\n  \"pile\",\n  \"scare\",\n  \"relive\",\n  \"resort\",\n  \"rush\",\n  \"boost\",\n  \"cease\",\n  \"command\",\n  \"excel\",\n  \"plug\",\n  \"plunge\",\n  \"proclaim\",\n  \"discourage\",\n  \"endure\",\n  \"ruin\",\n  \"stumble\",\n  \"abandon\",\n  \"cheat\",\n  \"convince\",\n  \"merge\",\n  \"convert\",\n  \"harm\",\n  \"multiply\",\n  \"overwhelm\",\n  \"chew\",\n  \"invent\",\n  \"bury\",\n  \"wipe\",\n  \"added\",\n  \"took\",\n  \"define\",\n  \"goes\",\n  \"measure\",\n  \"enhance\",\n  \"distinguish\",\n  \"avoid\",\n  //contractions\n  \"don't\",\n  \"won't\",\n  \"what's\" //somewhat ambiguous (what does|what are)\n];\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\nexports.pluck = function(arr, str) {\n  return arr.map(function(o) {\n    return o[str];\n  });\n};\n\nexports.flatten = function(arr) {\n  let all = [];\n  arr.forEach(function(a) {\n    all = all.concat(a);\n  });\n  return all;\n};\n\nexports.compact = function(arr) {\n  return arr.filter(function(a) {\n    if (a === undefined || a === null) {\n      return false;\n    }\n    return true;\n  });\n};\n\n//string utilities\nexports.endsWith = function(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n};\n\nexports.titlecase = function(str) {\n  if (!str) {\n    return \"\";\n  }\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\nlet Text = require(\"./text/text.js\");\n\n//by abstracting Text, we allow multiple Text objects by the same user\nlet nlp = function(str) {\n  return new Text(str);\n};\n\nmodule.exports = nlp;\n\n},{\"./text/text.js\":53}],16:[function(require,module,exports){\n//the lexicon is a big hash of words to pos tags\n//it's built by conjugating and inflecting a small seed of terms\n\"use strict\";\nlet fns = require(\"./fns.js\");\nlet verb_conjugate = require(\"./term/verb/conjugate/conjugate.js\");\n\nlet lexicon = {};\n\nlet addObj = function(obj) {\n  let keys = Object.keys(obj);\n  let l = keys.length;\n  for (let i = 0; i < l; i++) {\n    lexicon[keys[i]] = obj[keys[i]];\n  }\n};\n\nlet addArr = function(arr, tag) {\n  let l = arr.length;\n  for (let i = 0; i < l; i++) {\n    lexicon[arr[i]] = tag;\n  }\n};\n\n//conjugate all verbs.\nlet verbs = require(\"./data/verbs.js\");\nfor (let i = 0; i < verbs.length; i++) {\n  let c = verb_conjugate(verbs[i]);\n  lexicon[c.infinitive] = \"VBP\";\n  lexicon[c.past] = \"VBD\";\n  lexicon[c.gerund] = \"VBG\";\n  lexicon[c.present] = \"VBZ\";\n  if (c.doer) {\n    lexicon[c.doer] = \"NNA\";\n  }\n  if (c.participle) {\n    lexicon[c.participle] = \"VBN\";\n  }\n}\n\naddArr(require(\"./data/abbreviations.js\"), \"NNAB\");\naddArr(require(\"./data/adjectives.js\"), \"JJ\");\naddArr(require(\"./data/demonyms.js\"), \"JJ\");\naddArr(require(\"./data/honourifics.js\"), \"NNAB\");\naddArr(require(\"./data/uncountables.js\"), \"NN\");\naddArr(require(\"./data/dates.js\"), \"CD\");\naddArr(require(\"./data/numbers.js\"), \"CD\");\n//a little fancy\naddArr(Object.keys(require(\"./data/firstnames.js\")), \"NN\");\n//add irregular nouns\nlet irregNouns = require(\"./data/irregular_nouns.js\");\naddArr(fns.pluck(irregNouns, 0), \"NN\");\naddArr(fns.pluck(irregNouns, 1), \"NNS\");\n\naddObj(require(\"./data/misc.js\"));\naddObj(require(\"./data/multiples.js\"));\naddObj(require(\"./data/phrasal_verbs.js\"));\n\n// console.log(Object.keys(lexicon).length)\n// console.log(lexicon)\n\n// console.log(lexicon['once again'] === \"RB\")\n// console.log(lexicon['seven'] === \"CD\")\n// console.log(lexicon['sleep'] === \"VBP\")\n// console.log(lexicon['slept'] === \"VBD\")\n// console.log(lexicon['sleeping'] === \"VBG\")\n// console.log(lexicon['canadian'] === \"JJ\")\n// console.log(lexicon['july'] === \"CD\")\n// console.log(lexicon[null] === undefined)\n// console.log(lexicon[\"dr\"] === \"NNAB\")\n// console.log(lexicon[\"sounds\"] === \"VBZ\")\n// console.log(lexicon[\"look after\"] === \"VBP\")\n// console.log(lexicon['tony'] === \"NN\")\n// console.log(lexicon['loaf'] === \"NN\")\n// console.log(lexicon['loaves'] === \"NNS\")\n// console.log(lexicon['he'] === \"PRP\")\n\nmodule.exports = lexicon;\n\n},{\"./data/abbreviations.js\":1,\"./data/adjectives.js\":2,\"./data/dates.js\":3,\"./data/demonyms.js\":4,\"./data/firstnames.js\":5,\"./data/honourifics.js\":6,\"./data/irregular_nouns.js\":7,\"./data/misc.js\":8,\"./data/multiples.js\":9,\"./data/numbers.js\":10,\"./data/phrasal_verbs.js\":11,\"./data/uncountables.js\":12,\"./data/verbs.js\":13,\"./fns.js\":14,\"./term/verb/conjugate/conjugate.js\":44}],17:[function(require,module,exports){\n\"use strict\";\nlet Verb = require(\"../../term/verb/verb.js\");\nlet Noun = require(\"../../term/noun/noun.js\");\nlet Value = require(\"../../term/value/value.js\");\nlet Adverb = require(\"../../term/adverb/adverb.js\");\nlet Adjective = require(\"../../term/adjective/adjective.js\");\n\nlet mapping = {\n  \"NN\": Noun,\n  \"NNA\": Noun,\n  \"NNP\": Noun,\n  \"NNO\": Noun,\n  \"NNPA\": Noun,\n  \"NNAB\": Noun,\n  \"NNPS\": Noun,\n  \"NNS\": Noun,\n  \"NNG\": Noun,\n  \"PP\": Noun,\n  \"PRP\": Noun,\n  \"VB\": Verb,\n  \"VBD\": Verb,\n  \"VBP\": Verb,\n  \"VBG\": Verb,\n  \"VBF\": Verb,\n  \"VBN\": Verb,\n  \"VBZ\": Verb,\n  \"CP\": Verb,\n  \"JJ\": Adjective,\n  \"JJR\": Adjective,\n  \"JJS\": Adjective,\n  \"RB\": Adverb,\n  \"RBR\": Adverb,\n  \"RBS\": Adverb,\n  \"CD\": Value,\n  \"NU\": Value,\n  \"DA\": Value,\n  \"MD\": Verb,\n// \"DT\":   \"Determiner\",\n// \"IN\":   \"Preposition\",\n// \"CC\":   \"Conjunction\",\n};\n\n//swap the Term object with a proper Pos class\nlet assign = function(t, pos, reason) {\n  if (mapping[pos] !== undefined) {\n    t = new mapping[pos](t.text);\n    t.reason = reason;\n  }\n  return t;\n};\n\nmodule.exports = assign;\n\n},{\"../../term/adjective/adjective.js\":23,\"../../term/adverb/adverb.js\":29,\"../../term/noun/noun.js\":36,\"../../term/value/value.js\":43,\"../../term/verb/verb.js\":50}],18:[function(require,module,exports){\n//add a 'quiet' token for contractions so we can represent their grammar\n\"use strict\";\nlet Term = require(\"../../term/term.js\");\n\nlet contractions = {\n  \"i'd\": [\"i\", \"would\"],\n  \"she'd\": [\"she\", \"would\"],\n  \"he'd\": [\"he\", \"would\"],\n  \"they'd\": [\"they\", \"would\"],\n  \"we'd\": [\"we\", \"would\"],\n  \"i'll\": [\"i\", \"will\"],\n  \"she'll\": [\"she\", \"will\"],\n  \"he'll\": [\"he\", \"will\"],\n  \"they'll\": [\"they\", \"will\"],\n  \"we'll\": [\"we\", \"will\"],\n  \"i've\": [\"i\", \"have\"],\n  \"they've\": [\"they\", \"have\"],\n  \"we've\": [\"we\", \"have\"],\n  \"should've\": [\"should\", \"have\"],\n  \"would've\": [\"would\", \"have\"],\n  \"could've\": [\"could\", \"have\"],\n  \"must've\": [\"must\", \"have\"],\n  \"i'm\": [\"i\", \"am\"],\n  \"we're\": [\"we\", \"are\"],\n  \"they're\": [\"they\", \"are\"],\n  \"cannot\": [\"can\", \"not\"]\n};\n\nlet handle_contractions = function(terms) {\n  for (let i = 0; i < terms.length; i++) {\n    let t = terms[i];\n    if (contractions[t.normal] !== undefined) {\n      let split = contractions[t.normal];\n      let fixup = [].concat(\n        terms.slice(0, i),\n        [new Term(split[0])],\n        [new Term(split[1])],\n        terms.slice(i + 1, terms.length)\n      );\n      return handle_contractions(fixup); //recursive\n    }\n  }\n  return terms;\n};\n\nmodule.exports = handle_contractions;\n\n},{\"../../term/term.js\":40}],19:[function(require,module,exports){\n\"use strict\";\n\nlet assign = require(\"./assign\");\nlet lexicon = require(\"../../lexicon.js\");\n\n\n//consult lexicon for this known-word\nlet lexicon_pass = function(terms) {\n  return terms.map(function(t) {\n    //check lexicon straight-up\n    if (lexicon[t.normal] !== undefined) {\n      return assign(t, lexicon[t.normal], \"lexicon_pass\");\n    }\n    //try to match it without a prefix - eg. outworked -> worked\n    if (t.normal.match(/^(over|under|out|-|un|re|en).{4}/)) {\n      let attempt = t.normal.replace(/^(over|under|out|.*?-|un|re|en)/, \"\");\n      return assign(t, lexicon[attempt], \"lexicon_prefix\");\n    }\n    return t;\n  });\n};\n\nmodule.exports = lexicon_pass;\n\n},{\"../../lexicon.js\":16,\"./assign\":17}],20:[function(require,module,exports){\n//part-of-speech tagging\n\"use strict\";\nlet lexicon_pass = require(\"./lexicon_pass\");\nlet contractions = require(\"./contractions\");\nlet assign = require(\"./assign\");\nlet word_rules = require(\"./word_rules\");\n\n//set POS for capitalised words\nlet capital_signals = function(terms) {\n  //first words need careful rules\n  if (terms[0].is_acronym()) {\n    terms[0] = assign(terms[0], \"NN\", \"acronym\");\n  }\n  //non-first-word capitals are nouns\n  for (let i = 1; i < terms.length; i++) {\n    if (terms[i].is_capital() || terms[i].is_acronym()) {\n      terms[i] = assign(terms[i], \"NN\", \"capital_signal\");\n    }\n  }\n  return terms;\n};\n\n//regex-rules for words/suffixes\nlet rules_pass = function(terms) {\n  for (let i = 0; i < terms.length; i++) {\n    for (let o = 0; o < word_rules.length; o++) {\n      if (terms[i].normal.length > 4 && terms[i].normal.match(word_rules[o].reg)) {\n        return assign(terms[i], word_rules[o].pos, \"rules_pass\");\n      }\n    }\n  }\n  return terms;\n};\n\nlet tagger = function(s) {\n  s.terms = capital_signals(s.terms);\n  s.terms = contractions(s.terms);\n  s.terms = lexicon_pass(s.terms);\n  s.terms = rules_pass(s.terms);\n  return s.terms;\n};\n\nmodule.exports = tagger;\n\n},{\"./assign\":17,\"./contractions\":18,\"./lexicon_pass\":19,\"./word_rules\":21}],21:[function(require,module,exports){\n//regex patterns and parts of speech],\nmodule.exports = [\n  [\".[cts]hy$\", \"JJ\"],\n  [\".[st]ty$\", \"JJ\"],\n  [\".[lnr]ize$\", \"VB\"],\n  [\".[gk]y$\", \"JJ\"],\n  [\".fies$\", \"VB\"],\n  [\".some$\", \"JJ\"],\n  [\".[nrtumcd]al$\", \"JJ\"],\n  [\".que$\", \"JJ\"],\n  [\".[tnl]ary$\", \"JJ\"],\n  [\".[di]est$\", \"JJS\"],\n  [\"^(un|de|re)\\\\-[a-z]..\", \"VB\"],\n  [\".lar$\", \"JJ\"],\n  [\"[bszmp]{2}y\", \"JJ\"],\n  [\".zes$\", \"VB\"],\n  [\".[icldtgrv]ent$\", \"JJ\"],\n  [\".[rln]ates$\", \"VBZ\"],\n  [\".[oe]ry$\", \"JJ\"],\n  [\"[rdntkdhs]ly$\", \"RB\"],\n  [\".[lsrnpb]ian$\", \"JJ\"],\n  [\".[^aeiou]ial$\", \"JJ\"],\n  [\".[^aeiou]eal$\", \"JJ\"],\n  [\".[vrl]id$\", \"JJ\"],\n  [\".[ilk]er$\", \"JJR\"],\n  [\".ike$\", \"JJ\"],\n  [\".ends$\", \"VB\"],\n  [\".wards$\", \"RB\"],\n  [\".rmy$\", \"JJ\"],\n  [\".rol$\", \"NN\"],\n  [\".tors$\", \"NN\"],\n  [\".azy$\", \"JJ\"],\n  [\".where$\", \"RB\"],\n  [\".ify$\", \"VB\"],\n  [\".bound$\", \"JJ\"],\n  [\".ens$\", \"VB\"],\n  [\".oid$\", \"JJ\"],\n  [\".vice$\", \"NN\"],\n  [\".rough$\", \"JJ\"],\n  [\".mum$\", \"JJ\"],\n  [\".teen(th)?$\", \"CD\"],\n  [\".oses$\", \"VB\"],\n  [\".ishes$\", \"VB\"],\n  [\".ects$\", \"VB\"],\n  [\".tieth$\", \"CD\"],\n  [\".ices$\", \"NN\"],\n  [\".bles$\", \"VB\"],\n  [\".pose$\", \"VB\"],\n  [\".ions$\", \"NN\"],\n  [\".ean$\", \"JJ\"],\n  [\".[ia]sed$\", \"JJ\"],\n  [\".tized$\", \"VB\"],\n  [\".llen$\", \"JJ\"],\n  [\".fore$\", \"RB\"],\n  [\".ances$\", \"NN\"],\n  [\".gate$\", \"VB\"],\n  [\".nes$\", \"VB\"],\n  [\".less$\", \"RB\"],\n  [\".ried$\", \"JJ\"],\n  [\".gone$\", \"JJ\"],\n  [\".made$\", \"JJ\"],\n  [\".[pdltrkvyns]ing$\", \"JJ\"],\n  [\".tions$\", \"NN\"],\n  [\".tures$\", \"NN\"],\n  [\".ous$\", \"JJ\"],\n  [\".ports$\", \"NN\"],\n  [\". so$\", \"RB\"],\n  [\".ints$\", \"NN\"],\n  [\".[gt]led$\", \"JJ\"],\n  [\"[aeiou].*ist$\", \"JJ\"],\n  [\".lked$\", \"VB\"],\n  [\".fully$\", \"RB\"],\n  [\".*ould$\", \"MD\"],\n  [\"^-?[0-9]+(.[0-9]+)?$\", \"CD\"],\n  [\"[a-z]*\\\\-[a-z]*\\\\-\", \"JJ\"],\n  [\"[a-z]'s$\", \"NNO\"],\n  [\".'n$\", \"VB\"],\n  [\".'re$\", \"CP\"],\n  [\".'ll$\", \"MD\"],\n  [\".'t$\", \"VB\"],\n  [\".tches$\", \"VB\"],\n  [\"^https?\\:?\\/\\/[a-z0-9]\", \"CD\"], //the colon is removed in normalisation\n  [\"^www\\.[a-z0-9]\", \"CD\"],\n  [\".ize$\", \"VB\"],\n  [\".[^aeiou]ise$\", \"VB\"],\n  [\".[aeiou]te$\", \"VB\"],\n  [\".ea$\", \"NN\"],\n  [\"[aeiou][pns]er$\", \"NN\"],\n  [\".ia$\", \"NN\"],\n  [\".sis$\", \"NN\"],\n  [\".[aeiou]na$\", \"NN\"],\n  [\".[^aeiou]ity$\", \"NN\"],\n  [\".[^aeiou]ium$\", \"NN\"],\n  [\".[^aeiou][ei]al$\", \"JJ\"],\n  [\".ffy$\", \"JJ\"],\n  [\".[^aeiou]ic$\", \"JJ\"],\n  [\".(gg|bb|zz)ly$\", \"JJ\"],\n  [\".[aeiou]my$\", \"JJ\"],\n  [\".[aeiou]ble$\", \"JJ\"],\n  [\".[^aeiou]ful$\", \"JJ\"],\n  [\".[^aeiou]ish$\", \"JJ\"],\n  [\".[^aeiou]ica$\", \"NN\"],\n  [\"[aeiou][^aeiou]is$\", \"NN\"],\n  [\"[^aeiou]ard$\", \"NN\"],\n  [\"[^aeiou]ism$\", \"NN\"],\n  [\".[^aeiou]ity$\", \"NN\"],\n  [\".[^aeiou]ium$\", \"NN\"],\n  [\".[lstrn]us$\", \"NN\"],\n  [\"..ic$\", \"JJ\"],\n  [\"[aeiou][^aeiou]id$\", \"JJ\"],\n  [\".[^aeiou]ish$\", \"JJ\"],\n  [\".[^aeiou]ive$\", \"JJ\"],\n  [\"[ea]{2}zy$\", \"JJ\"],\n].map(function(a) {\n  return {\n    reg: new RegExp(a[0], \"i\"),\n    pos: a[1]\n  };\n});\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\nlet Term = require(\"../term/term.js\");\nlet fns = require(\"../fns.js\");\nlet tagger = require(\"./pos/tagger.js\");\n\n//a sentence is an array of Term objects, along with their various methods\nclass Sentence {\n\n  constructor(str) {\n    this.str = str || \"\";\n    let terms = str.split(\" \");\n    this.terms = terms.map(function(s, i) {\n      let info = {\n        index: i\n      };\n      return new Term(s, info);\n    });\n  }\n\n  //Sentence methods:\n\n  //the ending punctuation\n  terminator() {\n    let allowed = {\n      \".\": true,\n      \"!\": true,\n      \"?\": true\n    };\n    let char = this.str.slice(-1) || \"\";\n    if (allowed[char]) {\n      return char;\n    }\n    return \".\";\n  }\n\n  //part-of-speech assign each term\n  tag() {\n    this.terms = tagger(this);\n    return this.terms;\n  }\n\n  //is it a question/statement\n  sentence_type() {\n    let char = this.terminator();\n    let types = {\n      \"?\": \"interrogative\",\n      \"!\": \"exclamative\",\n      \".\": \"declarative\",\n    };\n    return types[char] || \"declarative\";\n  }\n\n  //map over Term methods\n  normalized() {\n    return fns.pluck(this.terms, \"normal\").join(\" \");\n  }\n  text() {\n    return fns.pluck(this.terms, \"text\").join(\" \");\n  }\n  parents() {\n    return fns.pluck(this.terms, \"parent\");\n  }\n}\n\nmodule.exports = Sentence;\n\n},{\"../fns.js\":14,\"../term/term.js\":40,\"./pos/tagger.js\":20}],23:[function(require,module,exports){\n\"use strict\";\nlet Term = require(\"../term.js\");\n\nlet to_comparative = require(\"./to_comparative\");\nlet to_superlative = require(\"./to_superlative\");\nlet adj_to_adv = require(\"./to_adverb\");\nlet adj_to_noun = require(\"./to_noun\");\n\nclass Adjective extends Term {\n  constructor(str) {\n    super(str);\n    this.parent = \"adjective\";\n  }\n\n  conjugate() {\n    return {\n      comparative: to_comparative(this.normal),\n      superlative: to_superlative(this.normal),\n      adverb: adj_to_adv(this.normal),\n      noun: adj_to_noun(this.normal)\n    };\n  }\n\n}\n\n// let t = new Adjective(\"quick\")\n// console.log(t.conjugate())\n\nmodule.exports = Adjective;\n\n},{\"../term.js\":40,\"./to_adverb\":25,\"./to_comparative\":26,\"./to_noun\":27,\"./to_superlative\":28}],24:[function(require,module,exports){\n//these are adjectives that can become comparative + superlative with out \"most/more\"\n//its a whitelist for conjugation\n//this data is shared between comparative/superlative methods\nmodule.exports = [\n  \"absurd\",\n  \"aggressive\",\n  \"alert\",\n  \"alive\",\n  \"awesome\",\n  \"beautiful\",\n  \"big\",\n  \"bitter\",\n  \"black\",\n  \"blue\",\n  \"bored\",\n  \"boring\",\n  \"brash\",\n  \"brave\",\n  \"brief\",\n  \"bright\",\n  \"broad\",\n  \"brown\",\n  \"calm\",\n  \"charming\",\n  \"cheap\",\n  \"clean\",\n  \"cold\",\n  \"cool\",\n  \"cruel\",\n  \"cute\",\n  \"damp\",\n  \"deep\",\n  \"dear\",\n  \"dead\",\n  \"dark\",\n  \"dirty\",\n  \"drunk\",\n  \"dull\",\n  \"eager\",\n  \"efficient\",\n  \"even\",\n  \"faint\",\n  \"fair\",\n  \"fanc\",\n  \"fast\",\n  \"fat\",\n  \"feeble\",\n  \"few\",\n  \"fierce\",\n  \"fine\",\n  \"flat\",\n  \"forgetful\",\n  \"frail\",\n  \"full\",\n  \"gentle\",\n  \"glib\",\n  \"great\",\n  \"green\",\n  \"gruesome\",\n  \"handsome\",\n  \"hard\",\n  \"harsh\",\n  \"high\",\n  \"hollow\",\n  \"hot\",\n  \"impolite\",\n  \"innocent\",\n  \"keen\",\n  \"kind\",\n  \"lame\",\n  \"lean\",\n  \"light\",\n  \"little\",\n  \"loose\",\n  \"long\",\n  \"loud\",\n  \"low\",\n  \"lush\",\n  \"macho\",\n  \"mean\",\n  \"meek\",\n  \"mellow\",\n  \"mundane\",\n  \"near\",\n  \"neat\",\n  \"new\",\n  \"nice\",\n  \"normal\",\n  \"odd\",\n  \"old\",\n  \"pale\",\n  \"pink\",\n  \"plain\",\n  \"poor\",\n  \"proud\",\n  \"purple\",\n  \"quick\",\n  \"rare\",\n  \"rapid\",\n  \"red\",\n  \"rich\",\n  \"ripe\",\n  \"rotten\",\n  \"round\",\n  \"rude\",\n  \"sad\",\n  \"safe\",\n  \"scarce\",\n  \"scared\",\n  \"shallow\",\n  \"sharp\",\n  \"short\",\n  \"shrill\",\n  \"simple\",\n  \"slim\",\n  \"slow\",\n  \"small\",\n  \"smart\",\n  \"smooth\",\n  \"soft\",\n  \"sore\",\n  \"sour\",\n  \"square\",\n  \"stale\",\n  \"steep\",\n  \"stiff\",\n  \"straight\",\n  \"strange\",\n  \"strong\",\n  \"sweet\",\n  \"swift\",\n  \"tall\",\n  \"tame\",\n  \"tart\",\n  \"tender\",\n  \"tense\",\n  \"thick\",\n  \"thin\",\n  \"tight\",\n  \"tough\",\n  \"vague\",\n  \"vast\",\n  \"vulgar\",\n  \"warm\",\n  \"weak\",\n  \"wet\",\n  \"white\",\n  \"wide\",\n  \"wild\",\n  \"wise\",\n  \"young\",\n  \"yellow\",\n  \"easy\",\n  \"narrow\",\n  \"late\",\n  \"early\",\n  \"soon\",\n  \"close\",\n  \"empty\",\n  \"dry\",\n  \"windy\",\n  \"noisy\",\n  \"thirsty\",\n  \"hungry\",\n  \"fresh\",\n  \"quiet\",\n  \"clear\",\n  \"heavy\",\n  \"happy\",\n  \"funny\",\n  \"lucky\",\n  \"pretty\",\n  \"important\",\n  \"interesting\",\n  \"attractive\",\n  \"dangerous\",\n  \"intellegent\",\n  \"pure\",\n  \"orange\",\n  \"large\",\n  \"firm\",\n  \"grand\",\n  \"formal\",\n  \"raw\",\n  \"weird\",\n  \"glad\",\n  \"mad\",\n  \"strict\",\n  \"tired\",\n  \"solid\",\n  \"extreme\",\n  \"mature\",\n  \"true\",\n  \"free\",\n  \"curly\",\n  \"angry\"\n].reduce(function(h, s) {\n  h[s] = true;\n  return h;\n}, {});\n\n},{}],25:[function(require,module,exports){\n//turn 'quick' into 'quickly'\n\"use strict\";\nlet adj_to_adv = function(str) {\n  let irregulars = {\n    \"idle\": \"idly\",\n    \"public\": \"publicly\",\n    \"vague\": \"vaguely\",\n    \"day\": \"daily\",\n    \"icy\": \"icily\",\n    \"single\": \"singly\",\n    \"female\": \"womanly\",\n    \"male\": \"manly\",\n    \"simple\": \"simply\",\n    \"whole\": \"wholly\",\n    \"special\": \"especially\",\n    \"straight\": \"straight\",\n    \"wrong\": \"wrong\",\n    \"fast\": \"fast\",\n    \"hard\": \"hard\",\n    \"late\": \"late\",\n    \"early\": \"early\",\n    \"well\": \"well\",\n    \"best\": \"best\",\n    \"latter\": \"latter\",\n    \"bad\": \"badly\"\n  };\n\n  let dont = {\n    \"foreign\": 1,\n    \"black\": 1,\n    \"modern\": 1,\n    \"next\": 1,\n    \"difficult\": 1,\n    \"degenerate\": 1,\n    \"young\": 1,\n    \"awake\": 1,\n    \"back\": 1,\n    \"blue\": 1,\n    \"brown\": 1,\n    \"orange\": 1,\n    \"complex\": 1,\n    \"cool\": 1,\n    \"dirty\": 1,\n    \"done\": 1,\n    \"empty\": 1,\n    \"fat\": 1,\n    \"fertile\": 1,\n    \"frozen\": 1,\n    \"gold\": 1,\n    \"grey\": 1,\n    \"gray\": 1,\n    \"green\": 1,\n    \"medium\": 1,\n    \"parallel\": 1,\n    \"outdoor\": 1,\n    \"unknown\": 1,\n    \"undersized\": 1,\n    \"used\": 1,\n    \"welcome\": 1,\n    \"yellow\": 1,\n    \"white\": 1,\n    \"fixed\": 1,\n    \"mixed\": 1,\n    \"super\": 1,\n    \"guilty\": 1,\n    \"tiny\": 1,\n    \"able\": 1,\n    \"unable\": 1,\n    \"same\": 1,\n    \"adult\": 1\n  };\n\n  let transforms = [{\n    reg: /al$/i,\n    repl: \"ally\"\n  }, {\n    reg: /ly$/i,\n    repl: \"ly\"\n  }, {\n    reg: /(.{3})y$/i,\n    repl: \"$1ily\"\n  }, {\n    reg: /que$/i,\n    repl: \"quely\"\n  }, {\n    reg: /ue$/i,\n    repl: \"uly\"\n  }, {\n    reg: /ic$/i,\n    repl: \"ically\"\n  }, {\n    reg: /ble$/i,\n    repl: \"bly\"\n  }, {\n    reg: /l$/i,\n    repl: \"ly\"\n  }];\n\n  let not_matches = [\n    /airs$/,\n    /ll$/,\n    /ee.$/,\n    /ile$/\n  ];\n\n  if (dont[str]) {\n    return null;\n  }\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  if (str.length <= 3) {\n    return null;\n  }\n  for (let i = 0; i < not_matches.length; i++) {\n    if (str.match(not_matches[i])) {\n      return null;\n    }\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n  return str + \"ly\";\n};\n// console.log(adj_to_adv('direct'))\n\nmodule.exports = adj_to_adv;\n\n},{}],26:[function(require,module,exports){\n//turn 'quick' into 'quickly'\n\"use strict\";\nlet convertables = require(\"./convertables\");\n\nlet to_comparative = function(str) {\n  let irregulars = {\n    \"grey\": \"greyer\",\n    \"gray\": \"grayer\",\n    \"green\": \"greener\",\n    \"yellow\": \"yellower\",\n    \"red\": \"redder\",\n    \"good\": \"better\",\n    \"well\": \"better\",\n    \"bad\": \"worse\",\n    \"sad\": \"sadder\"\n  };\n\n  let dont = {\n    \"overweight\": 1,\n    \"main\": 1,\n    \"nearby\": 1,\n    \"asleep\": 1,\n    \"weekly\": 1,\n    \"secret\": 1,\n    \"certain\": 1\n  };\n\n  let transforms = [{\n    reg: /y$/i,\n    repl: \"ier\"\n  }, {\n    reg: /([aeiou])t$/i,\n    repl: \"$1tter\"\n  }, {\n    reg: /([aeou])de$/i,\n    repl: \"$1der\"\n  }, {\n    reg: /nge$/i,\n    repl: \"nger\"\n  }];\n\n  let matches = [\n    /ght$/,\n    /nge$/,\n    /ough$/,\n    /ain$/,\n    /uel$/,\n    /[au]ll$/,\n    /ow$/,\n    /old$/,\n    /oud$/,\n    /e[ae]p$/\n  ];\n\n  let not_matches = [\n    /ary$/,\n    /ous$/\n  ];\n\n  if (dont.hasOwnProperty(str)) {\n    return null;\n  }\n\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (convertables.hasOwnProperty(str)) {\n    if (str.match(/e$/)) {\n      return str + \"r\";\n    }\n    return str + \"er\";\n  }\n\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n\n  for (let i = 0; i < not_matches.length; i++) {\n    if (str.match(not_matches[i])) {\n      return \"more \" + str;\n    }\n  }\n\n  for (let i = 0; i < matches.length; i++) {\n    if (str.match(matches[i])) {\n      return str + \"er\";\n    }\n  }\n  return \"more \" + str;\n};\n\n// console.log(to_comparative(\"great\"))\n\nmodule.exports = to_comparative;\n\n},{\"./convertables\":24}],27:[function(require,module,exports){\n//convert cute to cuteness\n\"use strict\";\nlet to_noun = function(w) {\n  let irregulars = {\n    \"clean\": \"cleanliness\",\n    \"naivety\": \"naivety\"\n  };\n  if (!w) {\n    return \"\";\n  }\n  if (irregulars.hasOwnProperty(w)) {\n    return irregulars[w];\n  }\n  if (w.match(\" \")) {\n    return w;\n  }\n  if (w.match(/w$/)) {\n    return w;\n  }\n  let transforms = [{\n    \"reg\": /y$/,\n    \"repl\": \"iness\"\n  }, {\n    \"reg\": /le$/,\n    \"repl\": \"ility\"\n  }, {\n    \"reg\": /ial$/,\n    \"repl\": \"y\"\n  }, {\n    \"reg\": /al$/,\n    \"repl\": \"ality\"\n  }, {\n    \"reg\": /ting$/,\n    \"repl\": \"ting\"\n  }, {\n    \"reg\": /ring$/,\n    \"repl\": \"ring\"\n  }, {\n    \"reg\": /bing$/,\n    \"repl\": \"bingness\"\n  }, {\n    \"reg\": /sing$/,\n    \"repl\": \"se\"\n  }, {\n    \"reg\": /ing$/,\n    \"repl\": \"ment\"\n  }, {\n    \"reg\": /ess$/,\n    \"repl\": \"essness\"\n  }, {\n    \"reg\": /ous$/,\n    \"repl\": \"ousness\"\n  }];\n\n  for (let i = 0; i < transforms.length; i++) {\n    if (w.match(transforms[i].reg)) {\n      return w.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (w.match(/s$/)) {\n    return w;\n  }\n  return w + \"ness\";\n};\n\n// console.log(to_noun(\"great\"))\n\nmodule.exports = to_noun;\n\n},{}],28:[function(require,module,exports){\n//turn 'quick' into 'quickest'\n\"use strict\";\nlet convertables = require(\"./convertables\");\n\nlet to_superlative = function(str) {\n  let irregulars = {\n    \"nice\": \"nicest\",\n    \"late\": \"latest\",\n    \"hard\": \"hardest\",\n    \"inner\": \"innermost\",\n    \"outer\": \"outermost\",\n    \"far\": \"furthest\",\n    \"worse\": \"worst\",\n    \"bad\": \"worst\",\n    \"good\": \"best\"\n  };\n\n  let dont = {\n    \"overweight\": 1,\n    \"ready\": 1\n  };\n\n  let transforms = [{\n    \"reg\": /y$/i,\n    \"repl\": \"iest\"\n  }, {\n    \"reg\": /([aeiou])t$/i,\n    \"repl\": \"$1ttest\"\n  }, {\n    \"reg\": /([aeou])de$/i,\n    \"repl\": \"$1dest\"\n  }, {\n    \"reg\": /nge$/i,\n    \"repl\": \"ngest\"\n  }];\n\n  let matches = [\n    /ght$/,\n    /nge$/,\n    /ough$/,\n    /ain$/,\n    /uel$/,\n    /[au]ll$/,\n    /ow$/,\n    /oud$/,\n    /...p$/\n  ];\n\n  let not_matches = [\n    /ary$/\n  ];\n\n  let generic_transformation = function(s) {\n    if (s.match(/e$/)) {\n      return s + \"st\";\n    }\n    return s + \"est\";\n  };\n\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (convertables.hasOwnProperty(str)) {\n    return generic_transformation(str);\n  }\n\n  if (dont.hasOwnProperty(str)) {\n    return \"most \" + str;\n  }\n\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (let i = 0; i < not_matches.length; i++) {\n    if (str.match(not_matches[i])) {\n      return \"most \" + str;\n    }\n  }\n\n  for (let i = 0; i < matches.length; i++) {\n    if (str.match(matches[i])) {\n      return generic_transformation(str);\n    }\n  }\n  return \"most \" + str;\n};\n\n// console.log(to_superlative(\"great\"))\n\nmodule.exports = to_superlative;\n\n},{\"./convertables\":24}],29:[function(require,module,exports){\n\"use strict\";\nlet Term = require(\"../term.js\");\nlet to_adjective = require(\"./to_adjective.js\");\n\nclass Adverb extends Term {\n  constructor(str) {\n    super(str);\n    this.parent = \"adverb\";\n  }\n  to_adjective() {\n    return to_adjective(this.normal);\n  }\n}\n\n// let t = new Adverb(\"quickly\")\n// console.log(t.to_adjective())\n\nmodule.exports = Adverb;\n\n},{\"../term.js\":40,\"./to_adjective.js\":30}],30:[function(require,module,exports){\n//turns 'quickly' into 'quick'\n\"use strict\";\nlet to_adjective = function(str) {\n  let irregulars = {\n    \"idly\": \"idle\",\n    \"sporadically\": \"sporadic\",\n    \"basically\": \"basic\",\n    \"grammatically\": \"grammatical\",\n    \"alphabetically\": \"alphabetical\",\n    \"economically\": \"economical\",\n    \"conically\": \"conical\",\n    \"politically\": \"political\",\n    \"vertically\": \"vertical\",\n    \"practically\": \"practical\",\n    \"theoretically\": \"theoretical\",\n    \"critically\": \"critical\",\n    \"fantastically\": \"fantastic\",\n    \"mystically\": \"mystical\",\n    \"pornographically\": \"pornographic\",\n    \"fully\": \"full\",\n    \"jolly\": \"jolly\",\n    \"wholly\": \"whole\"\n  };\n  let transforms = [{\n    \"reg\": /bly$/i,\n    \"repl\": \"ble\"\n  }, {\n    \"reg\": /gically$/i,\n    \"repl\": \"gical\"\n  }, {\n    \"reg\": /([rsdh])ically$/i,\n    \"repl\": \"$1ical\"\n  }, {\n    \"reg\": /ically$/i,\n    \"repl\": \"ic\"\n  }, {\n    \"reg\": /uly$/i,\n    \"repl\": \"ue\"\n  }, {\n    \"reg\": /ily$/i,\n    \"repl\": \"y\"\n  }, {\n    \"reg\": /(.{3})ly$/i,\n    \"repl\": \"$1\"\n  }];\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n  return str;\n};\n\n// console.log(to_adjective('quickly') === 'quick')\n// console.log(to_adjective('marvelously') === 'marvelous')\nmodule.exports = to_adjective;\n\n},{}],31:[function(require,module,exports){\n// convert british spellings into american ones\n// built with patterns+exceptions from https://en.wikipedia.org/wiki/British_spelling\n\"use strict\";\n\nlet patterns = [\n  // ise -> ize\n  {\n    reg: /([^aeiou][iy])s(e|ed|es|ing)?$/,\n    repl: \"$1z$2\"\n  },\n  // our -> or\n  {\n    reg: /(..)our(ly|y|ite)?$/,\n    repl: \"$1or$2\"\n  },\n  // re -> er\n  {\n    reg: /([^cdnv])re(s)?$/,\n    repl: \"$1er$2\"\n  },\n  // xion -> tion\n  {\n    reg: /([aeiou])xion([ed])?$/,\n    repl: \"$1tion$2\"\n  },\n  //logue -> log\n  {\n    reg: /logue$/,\n    repl: \"log\"\n  },\n  // ae -> e\n  {\n    reg: /([o|a])e/,\n    repl: \"e\"\n  },\n  //eing -> ing\n  {\n    reg: /e(ing|able)$/,\n    repl: \"$1\"\n  },\n  // illful -> ilful\n  {\n    reg: /([aeiou]+[^aeiou]+[aeiou]+)ll(ful|ment|est|ing|or|er|ed)$/, //must be second-syllable\n    repl: \"$1l$2\"\n  }\n];\n\nlet americanize = function(str) {\n  for (let i = 0; i < patterns.length; i++) {\n    if (str.match(patterns[i].reg)) {\n      return str.replace(patterns[i].reg, patterns[i].repl);\n    }\n  }\n\n  return str;\n};\n\n// console.log(americanize(\"synthesise\") === \"synthesize\")\n// console.log(americanize(\"synthesised\") === \"synthesized\")\n\nmodule.exports = americanize;\n\n},{}],32:[function(require,module,exports){\n// convert american spellings into british ones\n// built with patterns+exceptions from https://en.wikipedia.org/wiki/British_spelling\n// (some patterns are only safe to do in one direction)\n\"use strict\";\n\nlet patterns = [\n  // ise -> ize\n  {\n    reg: /([^aeiou][iy])z(e|ed|es|ing)?$/,\n    repl: \"$1s$2\"\n  },\n  // our -> or\n  // {\n  //   reg: /(..)our(ly|y|ite)?$/,\n  //   repl: '$1or$2',\n  //   exceptions: []\n  // },\n  // re -> er\n  // {\n  //   reg: /([^cdnv])re(s)?$/,\n  //   repl: '$1er$2',\n  //   exceptions: []\n  // },\n  // xion -> tion\n  // {\n  //   reg: /([aeiou])xion([ed])?$/,\n  //   repl: '$1tion$2',\n  //   exceptions: []\n  // },\n  //logue -> log\n  // {\n  //   reg: /logue$/,\n  //   repl: 'log',\n  //   exceptions: []\n  // },\n  // ae -> e\n  // {\n  //   reg: /([o|a])e/,\n  //   repl: 'e',\n  //   exceptions: []\n  // },\n  //eing -> ing\n  // {\n  //   reg: /e(ing|able)$/,\n  //   repl: '$1',\n  //   exceptions: []\n  // },\n  // illful -> ilful\n  {\n    reg: /([aeiou]+[^aeiou]+[aeiou]+)l(ful|ment|est|ing|or|er|ed)$/, //must be second-syllable\n    repl: \"$1ll$2\",\n    exceptions: []\n  }\n];\n\nlet britishize = function(str) {\n  for (let i = 0; i < patterns.length; i++) {\n    if (str.match(patterns[i].reg)) {\n      return str.replace(patterns[i].reg, patterns[i].repl);\n    }\n  }\n  return str;\n};\n\n// console.log(britishize(\"synthesize\") === \"synthesise\")\n// console.log(britishize(\"synthesized\") === \"synthesised\")\n\nmodule.exports = britishize;\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\n\n//chooses an indefinite aricle 'a/an' for a word\nlet irregulars = {\n  \"hour\": \"an\",\n  \"heir\": \"an\",\n  \"heirloom\": \"an\",\n  \"honest\": \"an\",\n  \"honour\": \"an\",\n  \"honor\": \"an\",\n  \"uber\": \"an\" //german u\n};\n\n\nlet is_acronym = function(s) {\n  //no periods\n  if (s.length <= 5 && s.match(/^[A-Z]*$/)) {\n    return true;\n  }\n  //with periods\n  if (s.length >= 4 && s.match(/^([A-Z]\\.)*$/)) {\n    return true;\n  }\n  return false;\n};\n\n\nlet indefinite_article = function(str) {\n  if (!str) {\n    return null;\n  }\n  //pronounced letters of acronyms that get a 'an'\n  let an_acronyms = {\n    A: true,\n    E: true,\n    F: true,\n    H: true,\n    I: true,\n    L: true,\n    M: true,\n    N: true,\n    O: true,\n    R: true,\n    S: true,\n    X: true\n  };\n  //'a' regexes\n  let a_regexs = [\n    /^onc?e/i, //'wu' sound of 'o'\n    /^u[bcfhjkqrstn][aeiou]/i, // 'yu' sound for hard 'u'\n    /^eul/i\n  ];\n\n  //begin business time\n  ////////////////////\n  //explicit irregular forms\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  //spelled-out acronyms\n  if (is_acronym(str) && an_acronyms.hasOwnProperty(str.substr(0, 1))) {\n    return \"an\";\n  }\n  //'a' regexes\n  for (let i = 0; i < a_regexs.length; i++) {\n    if (str.match(a_regexs[i])) {\n      return \"a\";\n    }\n  }\n  //basic vowel-startings\n  if (str.match(/^[aeiou]/i)) {\n    return \"an\";\n  }\n  return \"a\";\n};\n\n// console.log(indefinite_article(\"wolf\") === \"a\")\nmodule.exports = indefinite_article;\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\nlet irregulars = require(\"../../data/irregular_nouns\");\n\n//similar to plural/singularize rules, but not the same\nlet plural_indicators = [\n  /(^v)ies$/i,\n  /ises$/i,\n  /ives$/i,\n  /(antenn|formul|nebul|vertebr|vit)ae$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)i$/i,\n  /(buffal|tomat|tornad)oes$/i,\n  /(analy|ba|diagno|parenthe|progno|synop|the)ses$/i,\n  /(vert|ind|cort)ices$/i,\n  /(matr|append)ices$/i,\n  /(x|ch|ss|sh|s|z|o)es$/i,\n  /men$/i,\n  /news$/i,\n  /.tia$/i,\n  /(^f)ves$/i,\n  /(lr)ves$/i,\n  /(^aeiouy|qu)ies$/i,\n  /(m|l)ice$/i,\n  /(cris|ax|test)es$/i,\n  /(alias|status)es$/i,\n  /ics$/i\n];\n\n//similar to plural/singularize rules, but not the same\nlet singular_indicators = [\n  /(ax|test)is$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)us$/i,\n  /(octop|vir)i$/i,\n  /(rl)f$/i,\n  /(alias|status)$/i,\n  /(bu)s$/i,\n  /(al|ad|at|er|et|ed|ad)o$/i,\n  /(ti)um$/i,\n  /(ti)a$/i,\n  /sis$/i,\n  /(?:(^f)fe|(lr)f)$/i,\n  /hive$/i,\n  /(^aeiouy|qu)y$/i,\n  /(x|ch|ss|sh|z)$/i,\n  /(matr|vert|ind|cort)(ix|ex)$/i,\n  /(m|l)ouse$/i,\n  /(m|l)ice$/i,\n  /(antenn|formul|nebul|vertebr|vit)a$/i,\n  /.sis$/i,\n  /^(?!talis|.*hu)(.*)man$/i\n];\n\nlet is_plural = function(str) {\n  str = (str || \"\").toLowerCase();\n  //handle 'mayors of chicago'\n  let preposition = str.match(/([a-z]*) (of|in|by|for) [a-z]/);\n  if (preposition && preposition[1]) {\n    str = preposition[1];\n  }\n  // if it's a known irregular case\n  for (let i = 0; i < irregulars.length; i++) {\n    if (irregulars[i][1] === str) {\n      return true;\n    }\n    if (irregulars[i][0] === str) {\n      return false;\n    }\n  }\n  for (let i = 0; i < plural_indicators.length; i++) {\n    if (str.match(plural_indicators[i])) {\n      return true;\n    }\n  }\n  for (let i = 0; i < singular_indicators.length; i++) {\n    if (str.match(singular_indicators[i])) {\n      return false;\n    }\n  }\n  // some 'looks pretty plural' rules\n  if (str.match(/s$/) && !str.match(/ss$/) && str.length > 3) { //needs some lovin'\n    return true;\n  }\n  return false;\n};\n\n// console.log(is_plural('octopus') === false)\n// console.log(is_plural('octopi') === true)\n// console.log(is_plural('eyebrow') === false)\n// console.log(is_plural('eyebrows') === true)\n// console.log(is_plural('child') === false)\n// console.log(is_plural('children') === true)\n\nmodule.exports = is_plural;\n\n},{\"../../data/irregular_nouns\":7}],35:[function(require,module,exports){\n//uncountables are words that shouldn't ever inflect, for metaphysical reasons, like 'peace'\n\"use strict\";\nlet uncountable_arr = require(\"../../data/uncountables.js\");\n\nlet uncountable = uncountable_arr.reduce(function(h, a) {\n  h[a] = true;\n  return h;\n}, {});\n\nlet is_uncountable = function(str) {\n  if (uncountable[str]) {\n    return true;\n  }\n  return false;\n};\n// console.log(is_uncountable(\"peace\") === true)\n// console.log(is_uncountable(\"dog\") === false)\nmodule.exports = is_uncountable;\n\n},{\"../../data/uncountables.js\":12}],36:[function(require,module,exports){\n\"use strict\";\nlet Term = require(\"../term.js\");\nlet article = require(\"./article.js\");\nlet is_plural = require(\"./is_plural.js\");\nlet singularize = require(\"./singularize.js\");\nlet pluralize = require(\"./pluralize.js\");\nlet is_uncountable = require(\"./is_uncountable.js\");\n\nclass Noun extends Term {\n  constructor(str) {\n    super(str);\n    this.parent = \"noun\";\n  }\n  //noun methods\n  article() {\n    return article(this.normal);\n  }\n\n  is_plural() {\n    return is_plural(this.normal);\n  }\n  is_uncountable() {\n    return is_uncountable(this.normal);\n  }\n  pluralize() {\n    return pluralize(this.normal);\n  }\n  singularize() {\n    return singularize(this.normal);\n  }\n}\n\n// let t = new Noun(\"forks\")\n// console.log(t.singularize())\n\nmodule.exports = Noun;\n\n},{\"../term.js\":40,\"./article.js\":33,\"./is_plural.js\":34,\"./is_uncountable.js\":35,\"./pluralize.js\":37,\"./singularize.js\":38}],37:[function(require,module,exports){\n\"use strict\";\nlet is_uncountable = require(\"./is_uncountable.js\");\nlet irregulars = require(\"../../data/irregular_nouns.js\");\nlet is_plural = require(\"./is_plural.js\");\nlet fns = require(\"../../fns.js\");\n\nlet pluralize_rules = [\n  [/(ax|test)is$/i, \"$1es\"],\n  [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, \"$1i\"],\n  [/(octop|vir)i$/i, \"$1i\"],\n  [/([rl])f$/i, \"$1ves\"],\n  [/(alias|status)$/i, \"$1es\"],\n  [/(bu)s$/i, \"$1ses\"],\n  [/(al|ad|at|er|et|ed|ad)o$/i, \"$1oes\"],\n  [/([ti])um$/i, \"$1a\"],\n  [/([ti])a$/i, \"$1a\"],\n  [/sis$/i, \"ses\"],\n  [/(?:([^f])fe|([lr])f)$/i, \"$1ves\"],\n  [/(hive)$/i, \"$1s\"],\n  [/([^aeiouy]|qu)y$/i, \"$1ies\"],\n  [/(x|ch|ss|sh|s|z)$/i, \"$1es\"],\n  [/(matr|vert|ind|cort)(ix|ex)$/i, \"$1ices\"],\n  [/([m|l])ouse$/i, \"$1ice\"],\n  [/([m|l])ice$/i, \"$1ice\"],\n  [/^(ox)$/i, \"$1en\"],\n  [/^(oxen)$/i, \"$1\"],\n  [/(quiz)$/i, \"$1zes\"],\n  [/(antenn|formul|nebul|vertebr|vit)a$/i, \"$1ae\"],\n  [/(sis)$/i, \"ses\"],\n  [/^(?!talis|.*hu)(.*)man$/i, \"$1men\"],\n  [/(.*)/i, \"$1s\"]\n].map(function(a) {\n  return {\n    reg: a[0],\n    repl: a[1]\n  };\n});\n\n\nlet pluralize = function(str) {\n  let low = str.toLowerCase();\n  //uncountable\n  if (is_uncountable(low)) { //uncountables shouldn't ever inflect\n    return str;\n  }\n  //is it already plural?\n  if (is_plural(low) === true) {\n    return str;\n  }\n  //irregular\n  let found = irregulars.filter(function(r) {\n    return r[0] === low;\n  });\n  if (found[0]) {\n    if (fns.titlecase(low) === str) { //handle capitalisation properly\n      return fns.titlecase(found[0][1]);\n    }\n    return found[0][1];\n\n  }\n  //inflect first word of preposition-phrase\n  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n    let first = (str.match(/^([a-z]*) (of|in|by|for) [a-z]/) || [])[1];\n    if (first) {\n      let better_first = pluralize(first);\n      return better_first + str.replace(first, \"\");\n    }\n  }\n  //regular\n  for (let i = 0; i < pluralize_rules.length; i++) {\n    if (str.match(pluralize_rules[i].reg)) {\n      return str.replace(pluralize_rules[i].reg, pluralize_rules[i].repl);\n    }\n  }\n};\n// console.log(pluralize('gas') === \"gases\")\n// console.log(pluralize('narrative') === \"narratives\")\n// console.log(pluralize('video') === \"videos\")\n// console.log(pluralize('photo') === \"photos\")\n// console.log(pluralize('stomach') === \"stomachs\")\n// console.log(pluralize('database') === \"databases\")\n// console.log(pluralize('kiss') === \"kisses\")\n// console.log(pluralize('towns') === \"towns\")\n// console.log(pluralize('peace') === \"peace\")\n// console.log(pluralize('mayor of chicago') === \"mayors of chicago\")\nmodule.exports = pluralize;\n\n},{\"../../data/irregular_nouns.js\":7,\"../../fns.js\":14,\"./is_plural.js\":34,\"./is_uncountable.js\":35}],38:[function(require,module,exports){\n\"use strict\";\nlet is_uncountable = require(\"./is_uncountable.js\");\nlet irregulars = require(\"../../data/irregular_nouns.js\");\nlet is_plural = require(\"./is_plural.js\");\nlet fns = require(\"../../fns.js\");\n\nlet singularize_rules = [\n  [/([^v])ies$/i, \"$1y\"],\n  [/ises$/i, \"isis\"],\n  [/ives$/i, \"ife\"],\n  [/(antenn|formul|nebul|vertebr|vit)ae$/i, \"$1a\"],\n  [/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, \"$1us\"],\n  [/(buffal|tomat|tornad)(oes)$/i, \"$1o\"],\n  [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i, \"$1sis\"],\n  [/(vert|ind|cort)(ices)$/i, \"$1ex\"],\n  [/(matr|append)(ices)$/i, \"$1ix\"],\n  [/(x|ch|ss|sh|s|z|o)es$/i, \"$1\"],\n  [/men$/i, \"man\"],\n  [/(n)ews$/i, \"$1ews\"],\n  [/([ti])a$/i, \"$1um\"],\n  [/([^f])ves$/i, \"$1fe\"],\n  [/([lr])ves$/i, \"$1f\"],\n  [/([^aeiouy]|qu)ies$/i, \"$1y\"],\n  [/(s)eries$/i, \"$1eries\"],\n  [/(m)ovies$/i, \"$1ovie\"],\n  [/([m|l])ice$/i, \"$1ouse\"],\n  [/(cris|ax|test)es$/i, \"$1is\"],\n  [/(alias|status)es$/i, \"$1\"],\n  [/(ss)$/i, \"$1\"],\n  [/(ics)$/i, \"$1\"],\n  [/s$/i, \"\"]\n].map(function(a) {\n  return {\n    reg: a[0],\n    repl: a[1]\n  };\n});\n\nlet singularize = function(str) {\n  let low = str.toLowerCase();\n  //uncountable\n  if (is_uncountable(low)) {\n    return str;\n  }\n  //is it already singular?\n  if (is_plural(low) === false) {\n    return str;\n  }\n  //irregular\n  let found = irregulars.filter(function(r) {\n    return r[1] === low;\n  });\n  if (found[0]) {\n    if (fns.titlecase(low) === str) { //handle capitalisation properly\n      return fns.titlecase(found[0][0]);\n    }\n    return found[0][0];\n  }\n  //inflect first word of preposition-phrase\n  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n    let first = str.match(/^([a-z]*) (of|in|by|for) [a-z]/);\n    if (first && first[1]) {\n      let better_first = singularize(first[1]);\n      return better_first + str.replace(first[1], \"\");\n    }\n  }\n  //regular\n  for (let i = 0; i < singularize_rules.length; i++) {\n    if (str.match(singularize_rules[i].reg)) {\n      return str.replace(singularize_rules[i].reg, singularize_rules[i].repl);\n    }\n  }\n  return str;\n};\n\n// console.log(singularize('gases') === \"gas\")\n// console.log(singularize('kisses') === \"kiss\")\n// console.log(singularize('kiss') === \"kiss\")\n// console.log(singularize('children') === \"child\")\n// console.log(singularize('peace') === \"peace\")\n// console.log(singularize('child') === \"child\")\n// console.log(singularize('mayors of chicago') === \"mayor of chicago\")\n\nmodule.exports = singularize;\n\n},{\"../../data/irregular_nouns.js\":7,\"../../fns.js\":14,\"./is_plural.js\":34,\"./is_uncountable.js\":35}],39:[function(require,module,exports){\n//chop a string into pronounced syllables\n\"use strict\";\n\n//suffix fixes\nfunction postprocess(arr) {\n  //trim whitespace\n  arr = arr.map(function(w) {\n    return w.trim();\n  });\n  if (arr.length > 2) {\n    return arr;\n  }\n  let ones = [\n    /^[^aeiou]?ion/,\n    /^[^aeiou]?ised/,\n    /^[^aeiou]?iled/\n  ];\n  let l = arr.length;\n  if (l > 1) {\n    let suffix = arr[l - 2] + arr[l - 1];\n    for (let i = 0; i < ones.length; i++) {\n      if (suffix.match(ones[i])) {\n        arr[l - 2] = arr[l - 2] + arr[l - 1];\n        arr.pop();\n      }\n    }\n  }\n  return arr;\n}\n\nlet syllables = function(str) {\n  let all = [];\n\n  //method is nested because it's called recursively\n  let doer = function(w) {\n    let vow = /[aeiouy]$/;\n    let chars = w.split(\"\");\n    let before = \"\";\n    let after = \"\";\n    let current = \"\";\n    for (let i = 0; i < chars.length; i++) {\n      before = chars.slice(0, i).join(\"\");\n      current = chars[i];\n      after = chars.slice(i + 1, chars.length).join(\"\");\n      let candidate = before + chars[i];\n\n      //it's a consonant that comes after a vowel\n      if (before.match(vow) && !current.match(vow)) {\n        if (after.match(/^e[sm]/)) {\n          candidate += \"e\";\n          after = after.replace(/^e/, \"\");\n        }\n        all.push(candidate);\n        return doer(after);\n      }\n      //unblended vowels ('noisy' vowel combinations)\n      if (candidate.match(/(eo|eu|ia|oa|ua|ui)$/i)) { //'io' is noisy, not in 'ion'\n        all.push(before);\n        all.push(current);\n        return doer(after); //recursion\n      }\n    }\n    //if still running, end last syllable\n    if (str.match(/[aiouy]/) || str.match(/ee$/)) { //allow silent trailing e\n      all.push(w);\n    } else {\n      all[all.length - 1] = (all[all.length - 1] || \"\") + str; //append it to the last one\n    }\n  };\n\n  str.split(/\\s\\-/).forEach(function(s) {\n    doer(s);\n  });\n  all = postprocess(all);\n\n  //for words like 'tree' and 'free'\n  if (all.length === 0) {\n    all = [str];\n  }\n  //filter blanks\n  all = all.filter(function(s) {\n    return s !== \"\" && s !== null && s !== undefined;\n  });\n\n  return all;\n};\n\n// console.log(syllables(\"suddenly\"))\n\nmodule.exports = syllables;\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\nlet syllables = require(\"./syllables\");\nlet americanize = require(\"./americanize\");\nlet britishize = require(\"./britishize\");\n\nclass Term {\n  constructor(str) {\n    str = str || \"\";\n    this.text = str.trim();\n    this.normal = this.normalize();\n    this.reason = \"\";\n  }\n\n  //Term methods..\n  is_capital() {\n    if (this.text.match(/[A-Z][a-z]/)) { //tranditional capital\n      return true;\n    }\n    return false;\n  }\n  is_acronym() {\n    if (this.text.match(/([A-Z]\\.)+[A-Z]?$/)) {\n      return true;\n    }\n    return false;\n  }\n\n  normalize() {\n    let str = this.text || \"\";\n    str = str.toLowerCase();\n    str = str.replace(/[,\\.!:;\\?\\(\\)]/, \"\");\n    str = str.replace(/’/g, \"'\");\n    str = str.replace(/\"/g, \"\");\n    // coerce single curly quotes\n    str = str.replace(/[\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035]+/g, \"'\");\n    // coerce double curly quotes\n    str = str.replace(/[\\u201C\\u201D\\u201E\\u201F\\u2033\\u2036]+/g, \"\\\"\");\n    if (!str.match(/[a-z0-9]/i)) {\n      return \"\";\n    }\n    return str;\n  }\n  americanize() {\n    return americanize(this.normal);\n  }\n  britishize() {\n    return britishize(this.normal);\n  }\n  syllables() {\n    return syllables(this.normal);\n  }\n}\n\n// let t = new Term(\"synthesise\")\n// console.log(t.americanize())\n\nmodule.exports = Term;\n\n},{\"./americanize\":31,\"./britishize\":32,\"./syllables\":39}],41:[function(require,module,exports){\n// #generates properly-formatted dates from free-text date forms\n// #by spencer kelly 2014\n\"use strict\";\nlet months = \"(january|february|march|april|may|june|july|august|september|october|november|december|jan|feb|mar|apr|aug|sept|oct|nov|dec),?\";\nlet days = \"([0-9]{1,2}),?\";\nlet years = \"([12][0-9]{3})\";\n\nlet to_obj = function(arr, places) {\n  return Object.keys(places).reduce(function(h, k) {\n    h[k] = arr[places[k]];\n    return h;\n  }, {});\n};\n\nlet regexes = [{\n  reg: String(months) + \" \" + String(days) + \"-\" + String(days) + \" \" + String(years),\n  example: \"March 7th-11th 1987\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      month: 1,\n      day: 2,\n      to_day: 3,\n      year: 4\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(days) + \" of \" + String(months) + \" to \" + String(days) + \" of \" + String(months) + \" \" + String(years),\n  example: \"28th of September to 5th of October 2008\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      day: 1,\n      month: 2,\n      to_day: 3,\n      to_month: 4,\n      to_year: 5\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(months) + \" \" + String(days) + \" to \" + String(months) + \" \" + String(days) + \" \" + String(years),\n  example: \"March 7th to june 11th 1987\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      month: 1,\n      day: 2,\n      to_month: 3,\n      to_day: 4,\n      year: 5,\n      to_year: 5\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: \"between \" + String(days) + \" \" + String(months) + \" and \" + String(days) + \" \" + String(months) + \" \" + String(years),\n  example: \"between 13 February and 15 February 1945\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      day: 1,\n      month: 2,\n      to_day: 3,\n      to_month: 4,\n      year: 5,\n      to_year: 5\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: \"between \" + String(months) + \" \" + String(days) + \" and \" + String(months) + \" \" + String(days) + \" \" + String(years),\n  example: \"between March 7th and june 11th 1987\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      month: 1,\n      day: 2,\n      to_month: 3,\n      to_day: 4,\n      year: 5,\n      to_year: 5\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(months) + \" \" + String(days) + \" \" + String(years),\n  example: \"March 1st 1987\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      month: 1,\n      day: 2,\n      year: 3\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(days) + \" - \" + String(days) + \" of \" + String(months) + \" \" + String(years),\n  example: \"3rd - 5th of March 1969\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      day: 1,\n      to_day: 2,\n      month: 3,\n      year: 4\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(days) + \" of \" + String(months) + \" \" + String(years),\n  example: \"3rd of March 1969\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      day: 1,\n      month: 2,\n      year: 3\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(months) + \" \" + years + \",? to \" + String(months) + \" \" + String(years),\n  example: \"September 1939 to April 1945\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      month: 1,\n      year: 2,\n      to_month: 3,\n      to_year: 4\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(months) + \" \" + String(years),\n  example: \"March 1969\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      month: 1,\n      year: 2\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(months) + \" \" + days,\n  example: \"March 18th\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      month: 1,\n      day: 2\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: String(days) + \" of \" + months,\n  example: \"18th of March\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      month: 2,\n      day: 1\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: years + \" ?- ?\" + String(years),\n  example: \"1997-1998\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      year: 1,\n      to_year: 2\n    };\n    return to_obj(arr, places);\n  }\n}, {\n  reg: years,\n  example: \"1998\",\n  process: function(arr) {\n    if (!arr) {\n      arr = [];\n    }\n    let places = {\n      year: 1\n    };\n    return to_obj(arr, places);\n  }\n}].map(function(o) {\n  o.reg = new RegExp(o.reg, \"g\");\n  return o;\n});\n\n//0 based months, 1 based days...\nlet months_obj = {\n  january: 0,\n  february: 1,\n  march: 2,\n  april: 3,\n  may: 4,\n  june: 5,\n  july: 6,\n  august: 7,\n  september: 8,\n  october: 9,\n  november: 10,\n  december: 11,\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  aug: 7,\n  sept: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\n\n//thirty days hath september...\nlet last_dates = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nlet preprocess = function(str) {\n  str = str.toLowerCase();\n  str = str.replace(/([0-9])(th|rd|st)/g, \"$1\");\n  return str;\n};\n\nlet postprocess = function(obj, options) {\n  let d = new Date();\n  options = options || {};\n  obj.year = parseInt(obj.year, 10) || undefined;\n  obj.day = parseInt(obj.day, 10) || undefined;\n  obj.to_day = parseInt(obj.to_day, 10) || undefined;\n  obj.to_year = parseInt(obj.to_year, 10) || undefined;\n  obj.month = months_obj[obj.month];\n  obj.to_month = months_obj[obj.to_month];\n  //swap to_month and month\n  if (obj.to_month !== undefined && obj.month === undefined) {\n    obj.month = obj.to_month;\n  }\n  if (obj.to_month === undefined && obj.month !== undefined) {\n    obj.to_month = obj.month;\n  }\n  //swap to_year and year\n  if (obj.to_year && !obj.year) {\n    obj.year = obj.to_year;\n  }\n  if (!obj.to_year && obj.year && obj.to_month !== undefined) {\n    obj.to_year = obj.year;\n  }\n  if (options.assume_year && !obj.year) {\n    obj.year = d.getFullYear();\n  }\n  //make sure date is in that month..\n  if (obj.day !== undefined && obj.day > 31 || obj.month !== undefined && obj.day > last_dates[obj.month]) {\n    obj.day = undefined;\n  }\n  //make sure to date is after from date. fail everything if so...\n  //todo: do this smarter\n  if (obj.to_month !== undefined && obj.to_month < obj.month) {\n    return {};\n  }\n  if (obj.to_year && obj.to_year < obj.year) {\n    obj.year = undefined;\n    obj.to_year = undefined;\n  }\n\n  //make sure date is in reasonable range (very opinionated)\n  if (obj.year > 2090 || obj.year < 1200) {\n    obj.year = undefined;\n    obj.to_year = undefined;\n  }\n  //format result better\n  obj = {\n    day: obj.day,\n    month: obj.month,\n    year: obj.year,\n    to: {\n      day: obj.to_day,\n      month: obj.to_month,\n      year: obj.to_year\n    }\n  };\n  //add javascript date objects, if you can\n  if (obj.year && obj.day && obj.month !== undefined) {\n    obj.date_object = new Date();\n    obj.date_object.setYear(obj.year);\n    obj.date_object.setMonth(obj.month);\n    obj.date_object.setDate(obj.day);\n  }\n  if (obj.to.year && obj.to.day && obj.to.month !== undefined) {\n    obj.to.date_object = new Date();\n    obj.to.date_object.setYear(obj.to.year);\n    obj.to.date_object.setMonth(obj.to.month);\n    obj.to.date_object.setDate(obj.to.day);\n  }\n  //if we have enough data to return a result..\n  if (obj.year || obj.month !== undefined) {\n    return obj;\n  }\n  return {};\n};\n\n//pass through sequence of regexes until tempate is matched..\nlet date_extractor = function(str, options) {\n  options = options || {};\n  str = preprocess(str);\n  let l = regexes.length;\n  for (let i = 0; i < l; i += 1) {\n    let obj = regexes[i];\n    if (str.match(obj.reg)) {\n      let clone_reg = new RegExp(obj.reg.source, \"i\"); //this avoids a memory-leak\n      let arr = clone_reg.exec(str);\n      let good = obj.process(arr);\n      return postprocess(good, options);\n    }\n  }\n};\n\n// console.log(date_extractor(\"1998\"))\n// console.log(date_extractor(\"1999\"))\n\nmodule.exports = date_extractor;\n\n},{}],42:[function(require,module,exports){\n// converts spoken numbers into integers  \"fifty seven point eight\" -> 57.8\n//\n// Spoken numbers take the following format\n// [sixty five] (thousand) [sixty five] (hundred) [sixty five]\n// aka: [one/teen/ten] (multiple) [one/teen/ten] (multiple) ...\n// combile the [one/teen/ten]s as 'current_sum', then multiply it by its following multiple\n// multiple not repeat\n\n\"use strict\";\n//these sets of numbers each have different rules\n//[tenth, hundreth, thousandth..] are ambiguous because they could be ordinal like fifth, or decimal like one-one-hundredth, so are ignored\nlet ones = {\n  \"a\": 1,\n  \"zero\": 0,\n  \"one\": 1,\n  \"two\": 2,\n  \"three\": 3,\n  \"four\": 4,\n  \"five\": 5,\n  \"six\": 6,\n  \"seven\": 7,\n  \"eight\": 8,\n  \"nine\": 9,\n  \"first\": 1,\n  \"second\": 2,\n  \"third\": 3,\n  \"fourth\": 4,\n  \"fifth\": 5,\n  \"sixth\": 6,\n  \"seventh\": 7,\n  \"eighth\": 8,\n  \"ninth\": 9\n};\nlet teens = {\n  \"ten\": 10,\n  \"eleven\": 11,\n  \"twelve\": 12,\n  \"thirteen\": 13,\n  \"fourteen\": 14,\n  \"fifteen\": 15,\n  \"sixteen\": 16,\n  \"seventeen\": 17,\n  \"eighteen\": 18,\n  \"nineteen\": 19,\n  \"eleventh\": 11,\n  \"twelfth\": 12,\n  \"thirteenth\": 13,\n  \"fourteenth\": 14,\n  \"fifteenth\": 15,\n  \"sixteenth\": 16,\n  \"seventeenth\": 17,\n  \"eighteenth\": 18,\n  \"nineteenth\": 19\n};\nlet tens = {\n  \"twenty\": 20,\n  \"thirty\": 30,\n  \"forty\": 40,\n  \"fifty\": 50,\n  \"sixty\": 60,\n  \"seventy\": 70,\n  \"eighty\": 80,\n  \"ninety\": 90,\n  \"twentieth\": 20,\n  \"thirtieth\": 30,\n  \"fourtieth\": 40,\n  \"fiftieth\": 50,\n  \"sixtieth\": 60,\n  \"seventieth\": 70,\n  \"eightieth\": 80,\n  \"ninetieth\": 90\n};\nlet multiple = {\n  \"hundred\": 100,\n  \"grand\": 1000,\n  \"thousand\": 1000,\n  \"million\": 1000000,\n  \"billion\": 1000000000,\n  \"trillion\": 1000000000000,\n  \"quadrillion\": 1000000000000000,\n  \"quintillion\": 1000000000000000000,\n  \"sextillion\": 1000000000000000000000,\n  \"septillion\": 1000000000000000000000000,\n  \"octillion\": 1000000000000000000000000000,\n  \"nonillion\": 1000000000000000000000000000000,\n  \"decillion\": 1000000000000000000000000000000000\n};\n// let decimal_multiple={'tenth':0.1, 'hundredth':0.01, 'thousandth':0.001, 'millionth':0.000001,'billionth':0.000000001};\n\nlet to_number = function(s) {\n  //remember these concerns for possible errors\n  let ones_done = false;\n  let teens_done = false;\n  let tens_done = false;\n  let multiple_done = {};\n  let total = 0;\n  let global_multiplier = 1;\n  //pretty-printed numbers\n  s = s.replace(/, ?/g, \"\");\n  //parse-out currency\n  s = s.replace(/[$£€]/, \"\");\n  //try to finish-fast\n  if (s.match(/[0-9]\\.[0-9]/) && parseFloat(s) === s) {\n    return parseFloat(s);\n  }\n  if (parseInt(s, 10) === s) {\n    return parseInt(s, 10);\n  }\n  //try to die fast. (phone numbers or times)\n  if (s.match(/[0-9][\\-:][0-9]/)) {\n    return null;\n  }\n  //support global multipliers, like 'half-million' by doing 'million' then multiplying by 0.5\n  let mults = [{\n    reg: /^(minus|negative)[\\s\\-]/i,\n    mult: -1\n  }, {\n    reg: /^(a\\s)?half[\\s\\-](of\\s)?/i,\n    mult: 0.5\n  }, {\n    reg: /^(a\\s)?quarter[\\s\\-]/i,\n    mult: 0.25\n  }];\n  for (let i = 0; i < mults.length; i++) {\n    if (s.match(mults[i].reg)) {\n      global_multiplier = mults[i].mult;\n      s = s.replace(mults[i].reg, \"\");\n      break;\n    }\n  }\n\n  //do each word in turn..\n  let words = s.toString().split(/[\\s\\-]+/);\n  let w, x;\n  let current_sum = 0;\n  let local_multiplier = 1;\n  let decimal_mode = false;\n  for (let i = 0; i < words.length; i++) {\n    w = words[i];\n\n    //skip 'and' eg. five hundred and twelve\n    if (w === \"and\") {\n      continue;\n    }\n\n    //..we're doing decimals now\n    if (w === \"point\" || w === \"decimal\") {\n      if (decimal_mode) {\n        return null;\n      } //two point one point six\n      decimal_mode = true;\n      total += current_sum;\n      current_sum = 0;\n      ones_done = false;\n      local_multiplier = 0.1;\n      continue;\n    }\n\n    //handle special rules following a decimal\n    if (decimal_mode) {\n      x = null;\n      //allow consecutive ones in decimals eg. 'two point zero five nine'\n      if (ones[w] !== undefined) {\n        x = ones[w];\n      }\n      if (teens[w] !== undefined) {\n        x = teens[w];\n      }\n      if (parseInt(w, 10) === w) {\n        x = parseInt(w, 10);\n      }\n      if (!x) {\n        return null;\n      }\n      if (x < 10) {\n        total += x * local_multiplier;\n        local_multiplier = local_multiplier * 0.1; // next number is next decimal place\n        current_sum = 0;\n        continue;\n      }\n      //two-digit decimals eg. 'two point sixteen'\n      if (x < 100) {\n        total += x * (local_multiplier * 0.1);\n        local_multiplier = local_multiplier * 0.01; // next number is next decimal place\n        current_sum = 0;\n        continue;\n      }\n    }\n\n    //if it's already an actual number\n    if (w.match(/^[0-9]\\.[0-9]$/)) {\n      current_sum += parseFloat(w);\n      continue;\n    }\n    if (parseInt(w, 10) === w) {\n      current_sum += parseInt(w, 10);\n      continue;\n    }\n\n    //ones rules\n    if (ones[w] !== undefined) {\n      if (ones_done) {\n        return null;\n      } // eg. five seven\n      if (teens_done) {\n        return null;\n      } // eg. five seventeen\n      ones_done = true;\n      current_sum += ones[w];\n      continue;\n    }\n    //teens rules\n    if (teens[w]) {\n      if (ones_done) {\n        return null;\n      } // eg. five seventeen\n      if (teens_done) {\n        return null;\n      } // eg. fifteen seventeen\n      if (tens_done) {\n        return null;\n      } // eg. sixty fifteen\n      teens_done = true;\n      current_sum += teens[w];\n      continue;\n    }\n    //tens rules\n    if (tens[w]) {\n      if (ones_done) {\n        return null;\n      } // eg. five seventy\n      if (teens_done) {\n        return null;\n      } // eg. fiveteen seventy\n      if (tens_done) {\n        return null;\n      } // eg. twenty seventy\n      tens_done = true;\n      current_sum += tens[w];\n      continue;\n    }\n    //multiple rules\n    if (multiple[w]) {\n      if (multiple_done[w]) {\n        return null;\n      } // eg. five hundred six hundred\n      multiple_done[w] = true;\n      //reset our concerns. allow 'five hundred five'\n      ones_done = false;\n      teens_done = false;\n      tens_done = false;\n      //case of 'hundred million', (2 consecutive multipliers)\n      if (current_sum === 0) {\n        total = total || 1; //dont ever multiply by 0\n        total *= multiple[w];\n      } else {\n        current_sum *= multiple[w];\n        total += current_sum;\n      }\n      current_sum = 0;\n      continue;\n    }\n    //if word is not a known thing now, die\n    return null;\n  }\n  if (current_sum) {\n    total += (current_sum || 1) * local_multiplier;\n  }\n  //combine with global multiplier, like 'minus' or 'half'\n  total = total * global_multiplier;\n\n  return total;\n};\n\n// console.log(to_number(\"sixteen hundred\"))\n// console.log(to_number(\"a hundred\"))\n// console.log(to_number(\"four point seven seven\"))\n\n//kick it into module\nmodule.exports = to_number;\n\n},{}],43:[function(require,module,exports){\n\"use strict\";\nlet Term = require(\"../term.js\");\nlet date_extractor = require(\"./date_extractor.js\");\nlet to_number = require(\"./to_number.js\");\n\nclass Value extends Term {\n  constructor(str) {\n    super(str);\n    this.parent = \"value\";\n  }\n\n  is_date() {\n    let months = /(january|february|march|april|may|june|july|august|september|october|november|december|jan|feb|mar|apr|aug|sept|oct|nov|dec)/i;\n    let times = /1?[0-9]:[0-9]{2}/;\n    let days = /\\b(monday|tuesday|wednesday|thursday|friday|saturday|sunday|mon|tues|wed|thurs|fri|sat|sun)\\b/i;\n    if (this.normal.match(months) || this.normal.match(times) || this.normal.match(days)) {\n      return true;\n    }\n    return false;\n  }\n\n  to_number() {\n    return to_number(this.normal);\n  }\n\n  date_extractor() {\n    return date_extractor(this.normal);\n  }\n\n}\n\n// let t = new Value(\"january 5th 1998\")\n// console.log(t.date_extractor())\n\nmodule.exports = Value;\n\n},{\"../term.js\":40,\"./date_extractor.js\":41,\"./to_number.js\":42}],44:[function(require,module,exports){\n//turn a verb into its other grammatical forms.\n\"use strict\";\nlet verb_to_doer = require(\"./to_doer\");\nlet verb_irregulars = require(\"./verb_irregulars\");\nlet verb_rules = require(\"./verb_rules\");\nlet predict = require(\"./predict_form.js\");\n\n//fallback to this transformation if it has an unknown prefix\nlet fallback = function(w) {\n  let infinitive;\n  if (w.length > 4) {\n    infinitive = w.replace(/ed$/, \"\");\n  } else {\n    infinitive = w.replace(/d$/, \"\");\n  }\n  let present, past, gerund, doer;\n  if (w.match(/[^aeiou]$/)) {\n    gerund = w + \"ing\";\n    past = w + \"ed\";\n    if (w.match(/ss$/)) {\n      present = w + \"es\"; //'passes'\n    } else {\n      present = w + \"s\";\n    }\n    doer = verb_to_doer(infinitive);\n  } else {\n    gerund = w.replace(/[aeiou]$/, \"ing\");\n    past = w.replace(/[aeiou]$/, \"ed\");\n    present = w.replace(/[aeiou]$/, \"es\");\n    doer = verb_to_doer(infinitive);\n  }\n  return {\n    infinitive: infinitive,\n    present: present,\n    past: past,\n    gerund: gerund,\n    doer: doer,\n    future: \"will \" + infinitive\n  };\n};\n\n//make sure object has all forms\nlet fufill = function(obj, prefix) {\n  if (!obj.infinitive) {\n    return obj;\n  }\n  if (!obj.gerund) {\n    obj.gerund = obj.infinitive + \"ing\";\n  }\n  if (!obj.doer) {\n    obj.doer = verb_to_doer(obj.infinitive);\n  }\n  if (!obj.present) {\n    obj.present = obj.infinitive + \"s\";\n  }\n  if (!obj.past) {\n    obj.past = obj.infinitive + \"ed\";\n  }\n  //add the prefix to all forms, if it exists\n  if (prefix) {\n    Object.keys(obj).forEach(function(k) {\n      obj[k] = prefix + obj[k];\n    });\n  }\n  //future is 'will'+infinitive\n  if (!obj.future) {\n    obj.future = \"will \" + obj.infinitive;\n  }\n  //perfect is 'have'+past-tense\n  if (!obj.perfect) {\n    obj.perfect = \"have \" + obj.past;\n  }\n  //pluperfect is 'had'+past-tense\n  if (!obj.pluperfect) {\n    obj.pluperfect = \"had \" + obj.past;\n  }\n  //future perfect is 'will have'+past-tense\n  if (!obj.future_perfect) {\n    obj.future_perfect = \"will have \" + obj.past;\n  }\n  return obj;\n};\n\nlet conjugate = function(w) {\n  if (w === undefined) {\n    return {};\n  }\n\n  //for phrasal verbs ('look out'), conjugate look, then append 'out'\n  let phrasal_reg = new RegExp(\"^(.*?) (in|out|on|off|behind|way|with|of|do|away|across|ahead|back|over|under|together|apart|up|upon|aback|down|about|before|after|around|to|forth|round|through|along|onto)$\", \"i\");\n  if (w.match(\" \") && w.match(phrasal_reg)) {\n    let split = w.match(phrasal_reg, \"\");\n    let phrasal_verb = split[1];\n    let particle = split[2];\n    let result = conjugate(phrasal_verb); //recursive\n    delete result[\"doer\"];\n    Object.keys(result).forEach(function(k) {\n      if (result[k]) {\n        result[k] += \" \" + particle;\n      }\n    });\n    return result;\n  }\n\n  //for pluperfect ('had tried') remove 'had' and call it past-tense\n  if (w.match(/^had [a-z]/i)) {\n    w = w.replace(/^had /i, \"\");\n  }\n  //for perfect ('have tried') remove 'have' and call it past-tense\n  if (w.match(/^have [a-z]/i)) {\n    w = w.replace(/^have /i, \"\");\n  }\n\n  //for future perfect ('will have tried') remove 'will have' and call it past-tense\n  if (w.match(/^will have [a-z]/i)) {\n    w = w.replace(/^will have /i, \"\");\n  }\n\n  //chop it if it's future-tense\n  w = w.replace(/^will /i, \"\");\n  //un-prefix the verb, and add it in later\n  let prefix = (w.match(/^(over|under|re|anti|full)\\-?/i) || [])[0];\n  let verb = w.replace(/^(over|under|re|anti|full)\\-?/i, \"\");\n  //check irregulars\n  let obj = {};\n  let l = verb_irregulars.length;\n  for (let i = 0; i < l; i++) {\n    let x = verb_irregulars[i];\n    if (verb === x.present || verb === x.gerund || verb === x.past || verb === x.infinitive) {\n      obj = JSON.parse(JSON.stringify(verb_irregulars[i])); // object 'clone' hack, to avoid mem leak\n      return fufill(obj, prefix);\n    }\n  }\n  //guess the tense, so we know which transormation to make\n  let predicted = predict(w) || \"infinitive\";\n\n  //check against suffix rules\n  l = verb_rules[predicted].length;\n  for (let i = 0; i < l; i++) {\n    let r = verb_rules[predicted][i];\n    if (w.match(r.reg)) {\n      obj[predicted] = w;\n      let keys = Object.keys(r.repl);\n      for (let o = 0; o < keys.length; o++) {\n        if (keys[o] === predicted) {\n          obj[keys[o]] = w;\n        } else {\n          obj[keys[o]] = w.replace(r.reg, r.repl[keys[o]]);\n        }\n      }\n      return fufill(obj);\n    }\n  }\n\n  //produce a generic transformation\n  return fallback(w);\n};\nmodule.exports = conjugate;\n\n// console.log(conjugate(\"walking\"))\n// console.log(conjugate(\"overtook\"))\n// console.log(conjugate(\"watch out\"))\n// console.log(conjugate(\"watch\"))\n// console.log(conjugate(\"smash\"))\n// console.log(conjugate(\"word\"))\n// // broken\n// console.log(conjugate(\"read\"))\n// console.log(conjugate(\"free\"))\n// console.log(conjugate(\"flesh\"))\n// console.log(conjugate(\"branch\"))\n// console.log(conjugate(\"spred\"))\n// console.log(conjugate(\"bog\"))\n// console.log(conjugate(\"nod\"))\n// console.log(conjugate(\"had tried\"))\n// console.log(conjugate(\"have tried\"))\n\n},{\"./predict_form.js\":45,\"./to_doer\":47,\"./verb_irregulars\":48,\"./verb_rules\":49}],45:[function(require,module,exports){\n\"use strict\";\n//this method is used to predict which current conjugation a verb is\n\n//this method is the slowest in the whole library, basically TODO:whaaa\nlet suffix_rules = require(\"./suffix_rules\");\nlet fns = require(\"../../../fns.js\");\n\n//todo: support will/have/haven't etc\nlet predict = function(w) {\n  let arr = Object.keys(suffix_rules);\n  for (let i = 0; i < arr.length; i++) {\n    if (fns.endsWith(w, arr[i])) {\n      return suffix_rules[arr[i]];\n    }\n  }\n  return \"infinitive\";\n};\n\nmodule.exports = predict;\n\n},{\"../../../fns.js\":14,\"./suffix_rules\":46}],46:[function(require,module,exports){\n\"use strict\";\n//generated from test data\nlet compact = {\n  \"gerund\": [\n    \"ing\"\n  ],\n  \"infinitive\": [\n    \"ate\",\n    \"ize\",\n    \"tion\",\n    \"rify\",\n    \"ress\",\n    \"ify\",\n    \"age\",\n    \"nce\",\n    \"ect\",\n    \"ise\",\n    \"ine\",\n    \"ish\",\n    \"ace\",\n    \"ash\",\n    \"ure\",\n    \"tch\",\n    \"end\",\n    \"ack\",\n    \"and\",\n    \"ute\",\n    \"ade\",\n    \"ock\",\n    \"ite\",\n    \"ase\",\n    \"ose\",\n    \"use\",\n    \"ive\",\n    \"int\",\n    \"nge\",\n    \"lay\",\n    \"est\",\n    \"ain\",\n    \"ant\",\n    \"eed\",\n    \"er\",\n    \"le\"\n  ],\n  \"past\": [\n    \"ed\",\n    \"lt\",\n    \"nt\",\n    \"pt\",\n    \"ew\",\n    \"ld\"\n  ],\n  \"present\": [\n    \"rks\",\n    \"cks\",\n    \"nks\",\n    \"ngs\",\n    \"mps\",\n    \"tes\",\n    \"zes\",\n    \"ers\",\n    \"les\",\n    \"acks\",\n    \"ends\",\n    \"ands\",\n    \"ocks\",\n    \"lays\",\n    \"eads\",\n    \"lls\",\n    \"els\",\n    \"ils\",\n    \"ows\",\n    \"nds\",\n    \"ays\",\n    \"ams\",\n    \"ars\",\n    \"ops\",\n    \"ffs\",\n    \"als\",\n    \"urs\",\n    \"lds\",\n    \"ews\",\n    \"ips\",\n    \"es\",\n    \"ts\",\n    \"ns\",\n    \"s\"\n  ]\n};\nlet suffix_rules = {};\nlet keys = Object.keys(compact);\nlet l = keys.length;\nlet l2, i;\nfor (i = 0; i < l; i++) {\n  l2 = compact[keys[i]].length;\n  for (let o = 0; o < l2; o++) {\n    suffix_rules[compact[keys[i]][o]] = keys[i];\n  }\n}\nmodule.exports = suffix_rules;\n\n},{}],47:[function(require,module,exports){\n//somone who does this present-tense verb\n//turn 'walk' into 'walker'\n\"use strict\";\nlet doer = function(str) {\n  str = str || \"\";\n  let irregulars = {\n    \"tie\": \"tier\",\n    \"dream\": \"dreamer\",\n    \"sail\": \"sailer\",\n    \"run\": \"runner\",\n    \"rub\": \"rubber\",\n    \"begin\": \"beginner\",\n    \"win\": \"winner\",\n    \"claim\": \"claimant\",\n    \"deal\": \"dealer\",\n    \"spin\": \"spinner\"\n  };\n  let dont = {\n    \"aid\": 1,\n    \"fail\": 1,\n    \"appear\": 1,\n    \"happen\": 1,\n    \"seem\": 1,\n    \"try\": 1,\n    \"say\": 1,\n    \"marry\": 1,\n    \"be\": 1,\n    \"forbid\": 1,\n    \"understand\": 1,\n    \"bet\": 1\n  };\n  let transforms = [{\n    \"reg\": /e$/i,\n    \"repl\": \"er\"\n  }, {\n    \"reg\": /([aeiou])([mlgp])$/i,\n    \"repl\": \"$1$2$2er\"\n  }, {\n    \"reg\": /([rlf])y$/i,\n    \"repl\": \"$1ier\"\n  }, {\n    \"reg\": /^(.?.[aeiou])t$/i,\n    \"repl\": \"$1tter\"\n  }];\n\n  if (dont.hasOwnProperty(str)) {\n    return null;\n  }\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n  return str + \"er\";\n};\n\n// console.log(verb_to_doer('set'))\n// console.log(verb_to_doer('sweep'))\n// console.log(verb_to_doer('watch'))\nmodule.exports = doer;\n\n},{}],48:[function(require,module,exports){\n\"use strict\";\nlet types = [\n  \"infinitive\",\n  \"gerund\",\n  \"past\",\n  \"present\",\n  \"doer\",\n  \"future\"\n];\n\n//list of verb irregular verb forms, compacted to save space. ('_' -> infinitive )\nlet compact = [\n  [\n    \"arise\",\n    \"arising\",\n    \"arose\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"babysit\",\n    \"_ting\",\n    \"babysat\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"be\",\n    \"_ing\",\n    \"was\",\n    \"is\",\n    \"\"\n  ],\n  [\n    \"beat\",\n    \"_ing\",\n    \"_\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"become\",\n    \"becoming\",\n    \"became\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"bend\",\n    \"_ing\",\n    \"bent\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"begin\",\n    \"_ning\",\n    \"began\",\n    \"_s\",\n    \"_ner\"\n  ],\n  [\n    \"bet\",\n    \"_ting\",\n    \"_\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"bind\",\n    \"_ing\",\n    \"bound\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"bite\",\n    \"biting\",\n    \"bit\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"bleed\",\n    \"_ing\",\n    \"bled\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"blow\",\n    \"_ing\",\n    \"blew\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"break\",\n    \"_ing\",\n    \"broke\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"breed\",\n    \"_ing\",\n    \"bred\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"bring\",\n    \"_ing\",\n    \"brought\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"broadcast\",\n    \"_ing\",\n    \"_\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"build\",\n    \"_ing\",\n    \"built\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"buy\",\n    \"_ing\",\n    \"bought\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"catch\",\n    \"_ing\",\n    \"caught\",\n    \"_es\",\n    \"_er\"\n  ],\n  [\n    \"choose\",\n    \"choosing\",\n    \"chose\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"come\",\n    \"coming\",\n    \"came\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"cost\",\n    \"_ing\",\n    \"_\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"cut\",\n    \"_ting\",\n    \"_\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"deal\",\n    \"_ing\",\n    \"_t\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"dig\",\n    \"_ging\",\n    \"dug\",\n    \"_s\",\n    \"_ger\"\n  ],\n  [\n    \"do\",\n    \"_ing\",\n    \"did\",\n    \"_es\",\n    \"_er\"\n  ],\n  [\n    \"draw\",\n    \"_ing\",\n    \"drew\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"drink\",\n    \"_ing\",\n    \"drank\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"drive\",\n    \"driving\",\n    \"drove\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"eat\",\n    \"_ing\",\n    \"ate\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"fall\",\n    \"_ing\",\n    \"fell\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"feed\",\n    \"_ing\",\n    \"fed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"feel\",\n    \"_ing\",\n    \"felt\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"fight\",\n    \"_ing\",\n    \"fought\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"find\",\n    \"_ing\",\n    \"found\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"fly\",\n    \"_ing\",\n    \"flew\",\n    \"_s\",\n    \"flier\"\n  ],\n  [\n    \"forbid\",\n    \"_ing\",\n    \"forbade\",\n    \"_s\",\n\n  ],\n  [\n    \"forget\",\n    \"_ing\",\n    \"forgot\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"forgive\",\n    \"forgiving\",\n    \"forgave\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"freeze\",\n    \"freezing\",\n    \"froze\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"get\",\n    \"_ting\",\n    \"got\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"give\",\n    \"giving\",\n    \"gave\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"go\",\n    \"_ing\",\n    \"went\",\n    \"_es\",\n    \"_er\"\n  ],\n  [\n    \"grow\",\n    \"_ing\",\n    \"grew\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"hang\",\n    \"_ing\",\n    \"hung\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"have\",\n    \"having\",\n    \"had\",\n    \"has\",\n\n  ],\n  [\n    \"hear\",\n    \"_ing\",\n    \"_d\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"hide\",\n    \"hiding\",\n    \"hid\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"hit\",\n    \"_ting\",\n    \"_\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"hold\",\n    \"_ing\",\n    \"held\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"hurt\",\n    \"_ing\",\n    \"_\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"know\",\n    \"_ing\",\n    \"knew\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"relay\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"lay\",\n    \"_ing\",\n    \"laid\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"lead\",\n    \"_ing\",\n    \"led\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"leave\",\n    \"leaving\",\n    \"left\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"lend\",\n    \"_ing\",\n    \"lent\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"let\",\n    \"_ting\",\n    \"_\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"lie\",\n    \"lying\",\n    \"lay\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"light\",\n    \"_ing\",\n    \"lit\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"lose\",\n    \"losing\",\n    \"lost\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"make\",\n    \"making\",\n    \"made\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"mean\",\n    \"_ing\",\n    \"_t\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"meet\",\n    \"_ing\",\n    \"met\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"pay\",\n    \"_ing\",\n    \"paid\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"put\",\n    \"_ting\",\n    \"_\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"quit\",\n    \"_ting\",\n    \"_\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"read\",\n    \"_ing\",\n    \"_\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"ride\",\n    \"riding\",\n    \"rode\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"ring\",\n    \"_ing\",\n    \"rang\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"rise\",\n    \"rising\",\n    \"rose\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"run\",\n    \"_ning\",\n    \"ran\",\n    \"_s\",\n    \"_ner\"\n  ],\n  [\n    \"say\",\n    \"_ing\",\n    \"said\",\n    \"_s\",\n\n  ],\n  [\n    \"see\",\n    \"_ing\",\n    \"saw\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"sell\",\n    \"_ing\",\n    \"sold\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"send\",\n    \"_ing\",\n    \"sent\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"set\",\n    \"_ting\",\n    \"_\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"shake\",\n    \"shaking\",\n    \"shook\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"shine\",\n    \"shining\",\n    \"shone\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"shoot\",\n    \"_ing\",\n    \"shot\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"show\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"shut\",\n    \"_ting\",\n    \"_\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"sing\",\n    \"_ing\",\n    \"sang\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"sink\",\n    \"_ing\",\n    \"sank\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"sit\",\n    \"_ting\",\n    \"sat\",\n    \"_s\",\n    \"_ter\"\n  ],\n  [\n    \"slide\",\n    \"sliding\",\n    \"slid\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"speak\",\n    \"_ing\",\n    \"spoke\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"spend\",\n    \"_ing\",\n    \"spent\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"spin\",\n    \"_ning\",\n    \"spun\",\n    \"_s\",\n    \"_ner\"\n  ],\n  [\n    \"spread\",\n    \"_ing\",\n    \"_\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"stand\",\n    \"_ing\",\n    \"stood\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"steal\",\n    \"_ing\",\n    \"stole\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"stick\",\n    \"_ing\",\n    \"stuck\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"sting\",\n    \"_ing\",\n    \"stung\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"strike\",\n    \"striking\",\n    \"struck\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"swear\",\n    \"_ing\",\n    \"swore\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"swim\",\n    \"_ing\",\n    \"swam\",\n    \"_s\",\n    \"_mer\"\n  ],\n  [\n    \"swing\",\n    \"_ing\",\n    \"swung\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"take\",\n    \"taking\",\n    \"took\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"teach\",\n    \"_ing\",\n    \"taught\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"tear\",\n    \"_ing\",\n    \"tore\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"tell\",\n    \"_ing\",\n    \"told\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"think\",\n    \"_ing\",\n    \"thought\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"throw\",\n    \"_ing\",\n    \"threw\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"understand\",\n    \"_ing\",\n    \"understood\",\n    \"_s\",\n\n  ],\n  [\n    \"wake\",\n    \"waking\",\n    \"woke\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"wear\",\n    \"_ing\",\n    \"wore\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"win\",\n    \"_ning\",\n    \"won\",\n    \"_s\",\n    \"_ner\"\n  ],\n  [\n    \"withdraw\",\n    \"_ing\",\n    \"withdrew\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"write\",\n    \"writing\",\n    \"wrote\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"tie\",\n    \"tying\",\n    \"_d\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"obey\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"ski\",\n    \"_ing\",\n    \"_ied\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"boil\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"miss\",\n    \"_ing\",\n    \"_ed\",\n    \"_\",\n    \"_er\"\n  ],\n  [\n    \"act\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_or\"\n  ],\n  [\n    \"compete\",\n    \"competing\",\n    \"_d\",\n    \"_s\",\n    \"competitor\"\n  ],\n  [\n    \"being\",\n    \"are\",\n    \"were\",\n    \"are\",\n\n  ],\n  [\n    \"imply\",\n    \"_ing\",\n    \"implied\",\n    \"implies\",\n    \"implier\"\n  ],\n  [\n    \"ice\",\n    \"icing\",\n    \"_d\",\n    \"_s\",\n    \"_r\"\n  ],\n  [\n    \"develop\",\n    \"_ing\",\n    \"_\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"wait\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"aim\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"spill\",\n    \"_ing\",\n    \"spilt\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"drop\",\n    \"_ping\",\n    \"_ped\",\n    \"_s\",\n    \"_per\"\n  ],\n  [\n    \"head\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"log\",\n    \"_ging\",\n    \"_ged\",\n    \"_s\",\n    \"_ger\"\n  ],\n  [\n    \"rub\",\n    \"_bing\",\n    \"_bed\",\n    \"_s\",\n    \"_ber\"\n  ],\n  [\n    \"smash\",\n    \"_ing\",\n    \"_ed\",\n    \"_es\",\n    \"_er\"\n  ],\n  [\n    \"add\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"word\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"suit\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ],\n  [\n    \"be\",\n    \"am\",\n    \"was\",\n    \"am\",\n    \"\"\n  ],\n  [\n    \"load\",\n    \"_ing\",\n    \"_ed\",\n    \"_s\",\n    \"_er\"\n  ]\n];\n//expand compact version out\nmodule.exports = compact.map(function(arr) {\n  let obj = {};\n  for (let i = 0; i < arr.length; i++) {\n    obj[types[i]] = arr[i].replace(/_/, arr[0]);\n  }\n  return obj;\n});\n\n// console.log(JSON.stringify(verb_irregulars, null, 2));\n\n},{}],49:[function(require,module,exports){\n// regex rules for each part of speech that convert it to all other parts of speech.\n// used in combination with the generic 'fallback' method\n\"use strict\";\nlet verb_rules = {\n  \"infinitive\": [\n    [\n      \"(eed)$\",\n      {\n        \"pr\": \"$1s\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\",\n        \"do\": \"$1er\"\n      }\n    ],\n    [\n      \"(e)(ep)$\",\n      {\n        \"pr\": \"$1$2s\",\n        \"g\": \"$1$2ing\",\n        \"pa\": \"$1pt\",\n        \"do\": \"$1$2er\"\n      }\n    ],\n    [\n      \"(a[tg]|i[zn]|ur|nc|gl|is)e$\",\n      {\n        \"pr\": \"$1es\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"([i|f|rr])y$\",\n      {\n        \"pr\": \"$1ies\",\n        \"g\": \"$1ying\",\n        \"pa\": \"$1ied\"\n      }\n    ],\n    [\n      \"([td]er)$\",\n      {\n        \"pr\": \"$1s\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"([bd]l)e$\",\n      {\n        \"pr\": \"$1es\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(ish|tch|ess)$\",\n      {\n        \"pr\": \"$1es\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(ion|end|e[nc]t)$\",\n      {\n        \"pr\": \"$1s\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(om)e$\",\n      {\n        \"pr\": \"$1es\",\n        \"g\": \"$1ing\",\n        \"pa\": \"ame\"\n      }\n    ],\n    [\n      \"([aeiu])([pt])$\",\n      {\n        \"pr\": \"$1$2s\",\n        \"g\": \"$1$2$2ing\",\n        \"pa\": \"$1$2\"\n      }\n    ],\n    [\n      \"(er)$\",\n      {\n        \"pr\": \"$1s\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(en)$\",\n      {\n        \"pr\": \"$1s\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ]\n  ],\n  \"present\": [\n    [\n      \"(ies)$\",\n      {\n        \"in\": \"y\",\n        \"g\": \"ying\",\n        \"pa\": \"ied\"\n      }\n    ],\n    [\n      \"(tch|sh)es$\",\n      {\n        \"in\": \"$1\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(ss)es$\",\n      {\n        \"in\": \"$1\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"([tzlshicgrvdnkmu])es$\",\n      {\n        \"in\": \"$1e\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$\",\n      {\n        \"in\": \"$1\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(ow)s$\",\n      {\n        \"in\": \"$1\",\n        \"g\": \"$1ing\",\n        \"pa\": \"ew\"\n      }\n    ],\n    [\n      \"(op)s$\",\n      {\n        \"in\": \"$1\",\n        \"g\": \"$1ping\",\n        \"pa\": \"$1ped\"\n      }\n    ],\n    [\n      \"([eirs])ts$\",\n      {\n        \"in\": \"$1t\",\n        \"g\": \"$1tting\",\n        \"pa\": \"$1tted\"\n      }\n    ],\n    [\n      \"(ll)s$\",\n      {\n        \"in\": \"$1\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(el)s$\",\n      {\n        \"in\": \"$1\",\n        \"g\": \"$1ling\",\n        \"pa\": \"$1led\"\n      }\n    ],\n    [\n      \"(ip)es$\",\n      {\n        \"in\": \"$1e\",\n        \"g\": \"$1ing\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"ss$\",\n      {\n        \"in\": \"ss\",\n        \"g\": \"ssing\",\n        \"pa\": \"ssed\"\n      }\n    ],\n    [\n      \"s$\",\n      {\n        \"in\": \"\",\n        \"g\": \"ing\",\n        \"pa\": \"ed\"\n      }\n    ]\n  ],\n  \"gerund\": [\n    [\n      \"pping$\",\n      {\n        \"in\": \"p\",\n        \"pr\": \"ps\",\n        \"pa\": \"pped\"\n      }\n    ],\n    [\n      \"lling$\",\n      {\n        \"in\": \"ll\",\n        \"pr\": \"lls\",\n        \"pa\": \"lled\"\n      }\n    ],\n    [\n      \"tting$\",\n      {\n        \"in\": \"t\",\n        \"pr\": \"ts\",\n        \"pa\": \"t\"\n      }\n    ],\n    [\n      \"ssing$\",\n      {\n        \"in\": \"ss\",\n        \"pr\": \"sses\",\n        \"pa\": \"ssed\"\n      }\n    ],\n    [\n      \"gging$\",\n      {\n        \"in\": \"g\",\n        \"pr\": \"gs\",\n        \"pa\": \"gged\"\n      }\n    ],\n    [\n      \"([^aeiou])ying$\",\n      {\n        \"in\": \"$1y\",\n        \"pr\": \"$1ies\",\n        \"pa\": \"$1ied\",\n        \"do\": \"$1ier\"\n      }\n    ],\n    [\n      \"(i.)ing$\",\n      {\n        \"in\": \"$1e\",\n        \"pr\": \"$1es\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(u[rtcb]|[bdtpkg]l|n[cg]|a[gdkvtc]|[ua]s|[dr]g|yz|o[rlsp]|cre)ing$\",\n      {\n        \"in\": \"$1e\",\n        \"pr\": \"$1es\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(ch|sh)ing$\",\n      {\n        \"in\": \"$1\",\n        \"pr\": \"$1es\",\n        \"pa\": \"$1ed\"\n      }\n    ],\n    [\n      \"(..)ing$\",\n      {\n        \"in\": \"$1\",\n        \"pr\": \"$1s\",\n        \"pa\": \"$1ed\"\n      }\n    ]\n  ],\n  \"past\": [\n    [\n      \"(ued)$\",\n      {\n        \"pr\": \"ues\",\n        \"g\": \"uing\",\n        \"pa\": \"ued\",\n        \"do\": \"uer\"\n      }\n    ],\n    [\n      \"(e|i)lled$\",\n      {\n        \"pr\": \"$1lls\",\n        \"g\": \"$1lling\",\n        \"pa\": \"$1lled\",\n        \"do\": \"$1ller\"\n      }\n    ],\n    [\n      \"(sh|ch)ed$\",\n      {\n        \"in\": \"$1\",\n        \"pr\": \"$1es\",\n        \"g\": \"$1ing\",\n        \"do\": \"$1er\"\n      }\n    ],\n    [\n      \"(tl|gl)ed$\",\n      {\n        \"in\": \"$1e\",\n        \"pr\": \"$1es\",\n        \"g\": \"$1ing\",\n        \"do\": \"$1er\"\n      }\n    ],\n    [\n      \"(ss)ed$\",\n      {\n        \"in\": \"$1\",\n        \"pr\": \"$1es\",\n        \"g\": \"$1ing\",\n        \"do\": \"$1er\"\n      }\n    ],\n    [\n      \"pped$\",\n      {\n        \"in\": \"p\",\n        \"pr\": \"ps\",\n        \"g\": \"pping\",\n        \"do\": \"pper\"\n      }\n    ],\n    [\n      \"tted$\",\n      {\n        \"in\": \"t\",\n        \"pr\": \"ts\",\n        \"g\": \"tting\",\n        \"do\": \"tter\"\n      }\n    ],\n    [\n      \"gged$\",\n      {\n        \"in\": \"g\",\n        \"pr\": \"gs\",\n        \"g\": \"gging\",\n        \"do\": \"gger\"\n      }\n    ],\n    [\n      \"(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$\",\n      {\n        \"in\": \"$1\",\n        \"pr\": \"$1s\",\n        \"g\": \"$1ing\",\n        \"do\": \"$1er\"\n      }\n    ],\n    [\n      \"(..[^aeiou])ed$\",\n      {\n        \"in\": \"$1e\",\n        \"pr\": \"$1es\",\n        \"g\": \"$1ing\",\n        \"do\": \"$1er\"\n      }\n    ],\n    [\n      \"ied$\",\n      {\n        \"in\": \"y\",\n        \"pr\": \"ies\",\n        \"g\": \"ying\",\n        \"do\": \"ier\"\n      }\n    ],\n    [\n      \"(.o)ed$\",\n      {\n        \"in\": \"$1o\",\n        \"pr\": \"$1os\",\n        \"g\": \"$1oing\",\n        \"do\": \"$1oer\"\n      }\n    ],\n    [\n      \"(.i)ed$\",\n      {\n        \"in\": \"$1\",\n        \"pr\": \"$1s\",\n        \"g\": \"$1ing\",\n        \"do\": \"$1er\"\n      }\n    ],\n    [\n      \"([rl])ew$\",\n      {\n        \"in\": \"$1ow\",\n        \"pr\": \"$1ows\",\n        \"g\": \"$1owing\"\n      }\n    ],\n    [\n      \"([pl])t$\",\n      {\n        \"in\": \"$1t\",\n        \"pr\": \"$1ts\",\n        \"g\": \"$1ting\"\n      }\n    ]\n  ]\n};\n//unpack compressed form\nverb_rules = Object.keys(verb_rules).reduce(function(h, k) {\n  h[k] = verb_rules[k].map(function(a) {\n    let obj = {\n      reg: new RegExp(a[0], \"i\"),\n      repl: {\n        infinitive: a[1][\"in\"],\n        present: a[1][\"pr\"],\n        past: a[1][\"pa\"],\n        gerund: a[1][\"g\"]\n      }\n    };\n    if (a[1][\"do\"]) {\n      obj.repl.doer = a[1][\"do\"];\n    }\n    return obj;\n  });\n  return h;\n}, {});\n\nmodule.exports = verb_rules;\n// console.log(JSON.stringify(verb_rules, null, 2));\n\n},{}],50:[function(require,module,exports){\n\"use strict\";\nlet Term = require(\"../term.js\");\nlet conjugate = require(\"./conjugate/conjugate.js\");\nlet predict_form = require(\"./conjugate/predict_form.js\");\n\nlet allowed_forms = {\n  infinitive: 1,\n  present: 1,\n  past: 1,\n  gerund: 1,\n  doer: 1,\n  future: 1\n};\n\nclass Verb extends Term {\n  constructor(str, form) {\n    super(str);\n    this.parent = \"verb\";\n    this.conjugations = {}; //cached conjugations\n    //if we've been told which\n    if (form && allowed_forms[form]) {\n      this._form = form;\n      this.conjugations[form] = this.normal;\n    }\n  }\n\n  //which current conjugation form it is\n  form() {\n    //if we haven't been told\n    if (!this._form) {\n      this._form = predict_form(this.normal);\n    }\n    //else, predict it\n    return this._form;\n  }\n\n  //retrieve a specific form\n  conjugation(type) {\n    type = type || \"infinitive\";\n    //check cached conjugations\n    if (this.conjugations[type] === undefined) {\n      this.conjugate();\n    }\n  }\n\n  //is this verb negative already?\n  isNegative() {\n    let str = this.normal;\n    if (str.match(/n't$/)) {\n      return true;\n    }\n    if (str.match(/ not$/)) {\n      return true;\n    }\n    return false;\n  }\n\n  conjugate() {\n    this.conjugations = conjugate(this.normal);\n    return this.conjugations;\n  }\n}\n\n// let v = new Verb(\"walk\", \"asdf\")\n// console.log(v.form())\n\nmodule.exports = Verb;\n\n},{\"../term.js\":40,\"./conjugate/conjugate.js\":44,\"./conjugate/predict_form.js\":45}],51:[function(require,module,exports){\n\"use strict\";\n//split a string into all possible parts\nlet fns = require(\"../fns.js\");\n\n//n-gram takes a list of pre-cleaned terms, and makes no assumptions\nlet ngram = function(terms, options) {\n  options = options || {};\n  let min_count = options.min_count || 1; // minimum hit-count\n  let max_size = options.max_size || 5; // maximum gram count\n  let keys = [null];\n  let results = [];\n  //prepare the keys object\n  for (let i = 1; i <= max_size; i++) {\n    keys.push({});\n  }\n  // Create a hash for counting..\n  let textlen = terms.length;\n  for (let i = 0; i < textlen; i++) {\n    let s = terms[i];\n    keys[1][s] = (keys[1][s] || 0) + 1;\n    for (let j = 2; j <= max_size; j++) {\n      if (i + j <= textlen) {\n        s += \" \" + terms[i + j - 1];\n        keys[j][s] = (keys[j][s] || 0) + 1;\n      } else {\n        break;\n      }\n    }\n  }\n  // map the hash to an array for sorting\n  for (let k = 1; k < max_size; k++) {\n    results[k] = [];\n    let key = keys[k];\n    let words = Object.keys(keys[k]);\n    for (let i = 0; i < words.length; i++) {\n      let word = words[i];\n      if (key[word] >= min_count) {\n        results[k].push({\n          \"word\": word,\n          \"count\": key[word],\n          \"size\": k\n        });\n      }\n    }\n  }\n  //post-process + sort\n  results = fns.compact(results);\n  results = results.map(function(r) {\n    r = r.sort(function(a, b) {\n      return b.count - a.count;\n    });\n    return r;\n  });\n  return results;\n};\n\n// console.log(ngram(\"hi dr nick! dr nick!\".split(\" \")))\n\nmodule.exports = ngram;\n\n},{\"../fns.js\":14}],52:[function(require,module,exports){\n//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2015 MIT\n\"use strict\";\nlet abbreviations = require(\"../data/abbreviations\");\n\nlet sentence_parser = function(text) {\n  let sentences = [];\n  //first do a greedy-split..\n  let chunks = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n\n  //date abbrevs.\n  //these are added seperately because they are not nouns\n  abbreviations = abbreviations.concat([\"jan\", \"feb\", \"mar\", \"apr\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\", \"sept\", \"sep\"]);\n  //misc non-noun abbreviations\n  abbreviations = abbreviations.concat([\"ex\", \"eg\", \"ie\", \"circa\", \"ca\", \"cca\", \"vs\", \"etc\", \"esp\", \"ft\", \"bc\", \"ad\"]);\n\n  //detection of non-sentence chunks\n  let abbrev_reg = new RegExp(\"\\\\b(\" + abbreviations.join(\"|\") + \")[.!?] ?$\", \"i\");\n  let acronym_reg = new RegExp(\"[ |\\.][A-Z]\\.?$\", \"i\");\n  let elipses_reg = new RegExp(\"\\\\.\\\\.\\\\.*$\");\n\n  //loop through these chunks, and join the non-sentence chunks back together..\n  let chunks_length = chunks.length;\n  for (let i = 0; i < chunks_length; i++) {\n    if (chunks[i]) {\n      //trim whitespace\n      chunks[i] = chunks[i].replace(/^\\s+|\\s+$/g, \"\");\n      //should this chunk be combined with the next one?\n      if (chunks[i + 1] && chunks[i].match(abbrev_reg) || chunks[i].match(acronym_reg) || chunks[i].match(elipses_reg)) {\n        chunks[i + 1] = ((chunks[i] || \"\") + \" \" + (chunks[i + 1] || \"\")).replace(/ +/g, \" \");\n      } else if (chunks[i] && chunks[i].length > 0) { //this chunk is a proper sentence..\n        sentences.push(chunks[i]);\n        chunks[i] = \"\";\n      }\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text];\n  }\n\n  return sentences;\n};\n\nmodule.exports = sentence_parser;\n\n},{\"../data/abbreviations\":1}],53:[function(require,module,exports){\n\"use strict\";\nlet sentence_parser = require(\"./sentence_parser.js\");\nlet Sentence = require(\"../sentence/sentence.js\");\nlet ngram = require(\"./ngram.js\");\nlet fns = require(\"../fns.js\");\n\n//a text object is a series of sentences, along with the generic methods for transforming them\nclass Text {\n  constructor(str) {\n    this.str = str || \"\";\n    this.sentences = sentence_parser(str).map(function(s) {\n      return new Sentence(s);\n    });\n  }\n\n  //Text methods\n  ngram() {\n    let terms = this.terms();\n    terms = terms.map(function(t) {\n      return t.normal;\n    });\n    return ngram(terms);\n  }\n\n  //map over sentence methods\n  text() {\n    let arr = this.sentences.map(function(s) {\n      return s.text();\n    });\n    return fns.flatten(arr).join(\" \");\n  }\n  terms() {\n    let arr = this.sentences.map(function(s) {\n      return s.terms;\n    });\n    return fns.flatten(arr);\n  }\n  normalised() {\n    let arr = this.sentences.map(function(s) {\n      return s.normalized();\n    });\n    return fns.flatten(arr).join(\" \");\n  }\n}\n\nmodule.exports = Text;\n\n},{\"../fns.js\":14,\"../sentence/sentence.js\":22,\"./ngram.js\":51,\"./sentence_parser.js\":52}]},{},[15]);\n"]}